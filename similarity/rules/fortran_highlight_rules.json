{
    "name": "tokenizer_fortran",
    "extension": [ ".f", ".F" ],
    "check_rules": false,
    "states": {
        "start": [
            {
                "token": "comment",
                "regex": "!.*$"
            },
            {
                "token": "string",
                "regex": "(?:r|u|ur|R|U|UR|Ur|uR)?\"{3}",
                "next": "qqstring3"
            },
            {
                "token": "string",
                "regex": "(?:r|u|ur|R|U|UR|Ur|uR)?\"(?=.)",
                "next": "qqstring"
            },
            {
                "token": "string",
                "regex": "(?:r|u|ur|R|U|UR|Ur|uR)?\"{3}",
                "next": "qstring3"
            },
            {
                "token": "string",
                "regex": "(?:r|u|ur|R|U|UR|Ur|uR)?\"(?=.)",
                "next": "qstring"
            },
            {
                "token": "constant.numeric",
                "regex": "(?:(?:(?:(?:(?:(?:(?:\\d+)?(?:\\.\\d+))|(?:(?:\\d+)\\.))|(?:\\d+))(?:[eE][+-]?\\d+))|(?:(?:(?:\\d+)?(?:\\.\\d+))|(?:(?:\\d+)\\.)))|\\d+)[jJ]\\b"
            },
            {
                "token": "constant.numeric",
                "regex": "(?:(?:(?:(?:(?:(?:\\d+)?(?:\\.\\d+))|(?:(?:\\d+)\\.))|(?:\\d+))(?:[eE][+-]?\\d+))|(?:(?:(?:\\d+)?(?:\\.\\d+))|(?:(?:\\d+)\\.)))"
            },
            {
                "token": "constant.numeric",
                "regex": "(?:(?:(?:[1-9]\\d*)|(?:0))|(?:0[oO]?[0-7]+)|(?:0[xX][\\dA-Fa-f]+)|(?:0[bB][01]+))[lL]\\b"
            },
            {
                "token": "constant.numeric",
                "regex": "(?:(?:(?:[1-9]\\d*)|(?:0))|(?:0[oO]?[0-7]+)|(?:0[xX][\\dA-Fa-f]+)|(?:0[bB][01]+))\\b"
            },
            {
                "token": "keyword",
                "regex": "#\\s*(?:include|import|define|undef|INCLUDE|IMPORT|DEFINE|UNDEF)\\b"
            },
            {
                "token": "keyword",
                "regex": "#\\s*(?:endif|ifdef|else|elseif|ifndef|ENDIF|IFDEF|ELSE|ELSEIF|IFNDEF)\\b"
            },
            {
                "token": "identifier",
                "regex": "[a-zA-Z_$][a-zA-Z0-9_$]*\\b"
            },
            {
                "token": "keyword.operator",
                "regex": "\\+|\\-|\\*|\\*\\*|\\/|\\/\\/|%|<<|>>|&|\\||\\^|~|<|>|<=|=>|==|!=|<>|="
            },
            {
                "token": "paren.lparen",
                "regex": "[\\[\\(\\{]"
            },
            {
                "token": "paren.rparen",
                "regex": "[\\]\\)\\}]"
            },
            {
                "token": "text",
                "regex": "\\s+"
            }
        ],
        "qqstring3": [
            {
                "token": "constant.language.escape",
                "regex": "\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\abfnrtv'\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})"
            },
            {
                "token": "string",
                "regex": "\"{3}",
                "next": "start"
            },
            {
                "default_token": "string"
            }
        ],
        "qstring3": [
            {
                "token": "constant.language.escape",
                "regex": "\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\abfnrtv'\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})"
            },
            {
                "token": "string",
                "regex": "\"{3}",
                "next": "start"
            },
            {
                "default_token": "string"
            }
        ],
        "qqstring": [
            {
                "token": "constant.language.escape",
                "regex": "\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\abfnrtv'\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})"
            },
            {
                "token": "string",
                "regex": "\\\\$",
                "next": "qqstring"
            },
            {
                "token": "string",
                "regex": "\"|$",
                "next": "start"
            },
            {
                "default_token": "string"
            }
        ],
        "qstring": [
            {
                "token": "constant.language.escape",
                "regex": "\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\abfnrtv'\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})"
            },
            {
                "token": "string",
                "regex": "\\\\$",
                "next": "qstring"
            },
            {
                "token": "string",
                "regex": "'|$",
                "next": "start"
            },
            {
                "default_token": "string"
            }
        ]
    }
}