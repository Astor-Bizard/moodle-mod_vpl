{"version":3,"file":"vplide.min.js","sources":["../src/vplide.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\n//\n// VPL for Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// VPL for Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * IDE Control\n *\n * @copyright 2017 Juan Carlos Rodríguez-del-Pino\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author Juan Carlos Rodríguez-del-Pino <jcrodriguez@dis.ulpgc.es>\n */\n\n/* globals MathJax */\n\ndefine(\n    [\n        'jquery',\n        'jqueryui',\n        'mod_vpl/vplutil',\n        'mod_vpl/vplui',\n        'mod_vpl/vplidefile',\n        'mod_vpl/vplidebutton',\n        'mod_vpl/vplterminal',\n        'mod_vpl/vplvnc',\n    ],\n    function($, jqui, VPLUtil, VPLUI, VPLFile, VPLIDEButtons, VPLTerminal, VPLVNCClient) {\n        if (typeof VPLIDE !== 'undefined') {\n            return VPLIDE;\n        }\n        var vplIdeInstance;\n        var VPLIDE = function(rootId, options) {\n            var self = this;\n            var fileManager;\n            var adjustTabsTitles;\n            var autoResizeTab;\n            var showErrorMessage;\n            var updateMenu;\n            var executionActions;\n            var minNumberOfFiles = options.minfiles || 0;\n            var maxNumberOfFiles = options.maxfiles || 0;\n            var restrictedEdit = options.restrictededitor || options.example;\n            var readOnly = options.example;\n            var readOnlyFiles = options.readOnlyFiles;\n            var isTeacher = options.isTeacher;\n            var fullScreen = false;\n            var scrollBarWidth = VPLUI.scrollBarWidth();\n            var str = VPLUtil.str;\n            var rootObj = $('#' + rootId);\n            $(\"head\").append('<meta name=\"viewport\" content=\"initial-scale=1\">')\n                          .append('<meta name=\"viewport\" width=\"device-width\">')\n                          .append('<link rel=\"stylesheet\" href=\"../editor/VPLIDE.css\"/>');\n            if (typeof rootObj != 'object') {\n                throw new Error(\"VPL: constructor tag_id not found\");\n            }\n            var optionsToCheck = {\n                'new': true,\n                'rename': true,\n                'delete': true,\n                'save': true,\n                'run': true,\n                'edit': true,\n                'debug': true,\n                'evaluate': true,\n                'import': true,\n                'resetfiles': true,\n                'sort': true,\n                'multidelete': true,\n                'acetheme': true,\n                'console': true,\n                'comments': true\n            };\n            if ((typeof options.loadajaxurl) == 'undefined') {\n                options.loadajaxurl = options.ajaxurl;\n            }\n            (function() {\n                var activateModification = (minNumberOfFiles < maxNumberOfFiles);\n                options.new = activateModification;\n                options.rename = activateModification;\n                options.delete = activateModification;\n                options.comments = options.comments && !options.example;\n                options.acetheme = true;\n            })();\n            options.sort = (maxNumberOfFiles - minNumberOfFiles >= 2);\n            options.multidelete = options.sort;\n            options.import = !restrictedEdit;\n            var isOptionAllowed = function(op) {\n                if (!optionsToCheck[op]) {\n                    return true;\n                }\n                return options[op];\n            };\n            options.console = isOptionAllowed('run') || isOptionAllowed('debug');\n            if ((typeof options.fontSize) == 'undefined') {\n                options.fontSize = 12;\n            }\n            options.fontSize = parseInt(options.fontSize);\n            /**\n             * Handler for dragover event.\n             * @param {object} e event.\n             */\n            function dragoverHandler(e) {\n                if (restrictedEdit) {\n                    e.originalEvent.dataTransfer.dropEffect = 'none';\n                } else {\n                    e.originalEvent.dataTransfer.dropEffect = 'copy';\n                }\n                e.preventDefault();\n            }\n            /**\n             * Handler for drop event.\n             * @param {object} e event.\n             * @returns {boolean}\n             */\n            function dropHandler(e) {\n                if (restrictedEdit) { // No drop allowed.\n                    e.stopImmediatePropagation();\n                    return false;\n                }\n                var dt = e.originalEvent.dataTransfer;\n                // Drop files.\n                if (dt.files.length > 0) {\n                    VPLUI.readSelectedFiles(dt.files, function(file) {\n                        return fileManager.addFile(file, true, updateMenu, showErrorMessage);\n                    },\n                    function() {\n                        fileManager.fileListVisibleIfNeeded();\n                    });\n                    e.stopImmediatePropagation();\n                    return false;\n                }\n                return false;\n            }\n            rootObj.on('drop', dropHandler);\n            rootObj.on('dragover', dragoverHandler);\n            /**\n             * Handler for paste limited by restrictedEdit var.\n             * @param {object} e event.\n             * @returns {boolean}\n             */\n            function restrictedPaste(e) {\n                if (restrictedEdit) {\n                    e.stopPropagation();\n                    return false;\n                }\n                return true;\n            }\n            // Init editor vars.\n            var menu = $('#vpl_menu');\n            var menuButtons = new VPLIDEButtons(menu, isOptionAllowed);\n            var tr = $('#vpl_tr');\n            var fileListContainer = $('#vpl_filelist');\n            var fileList = $('#vpl_filelist_header');\n            var fileListContent = $('#vpl_filelist_content');\n            var tabsUl = $('#vpl_tabs_ul');\n            var tabs = $('#vpl_tabs');\n            var resultContainer = $('#vpl_results');\n            var result = $('#vpl_results_accordion');\n            var renameDiretoryAction = VPLUtil.doNothing;\n            fileListContainer.vplMinWidth = 80;\n            resultContainer.vplMinWidth = 100;\n            /**\n             * Avoids selecting grade.\n             * @param {object} event Unuse.\n             * @param {object} ui UI origen.\n             * @returns {boolean}\n             */\n            function avoidSelectGrade(event, ui) {\n                if (\"newHeader\" in ui) {\n                    if (ui.newHeader.hasClass('vpl_ide_accordion_t_grade')) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            /**\n             * Constructor of FileManager objects\n             */\n            function FileManager() {\n                var tabsUl = $('#vpl_tabs_ul');\n                $('#vpl_tabs').tabs();\n                var tabs = $('#vpl_tabs').tabs(\"widget\");\n                var files = [];\n                var openFiles = [];\n                var modified = true;\n                var self = this;\n                (function() {\n                    var version;\n                    self.setVersion = function(v) {\n                       version = v;\n                    };\n                    self.getVersion = function() {\n                       return version;\n                    };\n                })();\n                this.updateFileList = function() {\n                    self.generateFileList();\n                };\n                this.fileNameExists = function(name) {\n                    var checkName = name.toLowerCase();\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getFileName().toLowerCase() == checkName) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                /**\n                 * Checks if name is included in current files names\n                 * @param {string} name Name of file\n                 * @returns {boolean} if found or not found\n                 */\n                function fileNameIncluded(name) {\n                    var checkName = name.toLowerCase() + '/';\n                    for (var i = 0; i < files.length; i++) {\n                        var nameMod = files[i].getFileName().toLowerCase() + '/';\n                        // Check for name as directory existent.\n                        if (nameMod.indexOf(checkName) === 0 || checkName.indexOf(nameMod) === 0) {\n                            return true;\n                        }\n                    }\n                    return false;\n                }\n                /**\n                 * Checks if changing file name results in two blovkly files\n                 * @param {string} oldname The old file name\n                 * @param {string} newname The new file name\n                 * @returns {boolean} if results two two blovkly files\n                 */\n                function twoBlockly(oldname, newname) {\n                    if (VPLUtil.isBlockly(oldname)) {\n                        return false;\n                    }\n                    if (VPLUtil.isBlockly(newname)) {\n                        for (var i = 0; i < files.length; i++) {\n                            if (VPLUtil.isBlockly(files[i].getFileName())) {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                }\n                this.restrictedPaste = restrictedPaste;\n                this.dropHandler = dropHandler;\n                this.dragoverHandler = dragoverHandler;\n                this.readOnly = readOnly;\n                this.readOnlyFiles = readOnlyFiles;\n                this.restrictedEdit = restrictedEdit;\n                this.adjustTabsTitles = adjustTabsTitles;\n                this.minNumberOfFiles = minNumberOfFiles;\n                this.scrollBarWidth = scrollBarWidth;\n                var localClipboard = \"\";\n                this.setClipboard = function(t) {\n                    localClipboard = t;\n                };\n                this.getClipboard = function() {\n                    return localClipboard;\n                };\n                this.getTabPos = function(fileId) {\n                    for (var i = 0; i < openFiles.length; i++) {\n                        if (openFiles[i].getId() == fileId) {\n                            return i;\n                        }\n                    }\n                    return openFiles.length;\n                };\n                this.getTheme = function() {\n                    return options.theme;\n                };\n                this.setTheme = function(theme) {\n                    options.theme = theme;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].setTheme(theme);\n                    }\n                };\n                this.addTab = function(fid) {\n                    var hlink = '<a href=\"#vpl_file' + fid + '\"></a>';\n                    tabsUl.append('<li id=\"vpl_tab_name' + fid + '\">' + hlink + '</li>');\n                    tabs.append('<div id=\"vpl_file' + fid + '\" class=\"vpl_ide_file\"></div>');\n                };\n                this.removeTab = function(fid) {\n                    tabsUl.find('#vpl_tab_name' + fid).remove();\n                    tabs.find('#vpl_file' + fid).remove();\n                };\n                this.isReadOnly = function(fileName) {\n                    return this.readOnly || this.readOnlyFiles.indexOf(fileName) != -1;\n                };\n                this.open = function(pos) {\n                    var file;\n                    if (typeof pos == 'object') {\n                        file = pos;\n                    } else {\n                        file = files[pos];\n                    }\n                    if (file.isOpen()) {\n                        return;\n                    }\n                    var fid = file.getId();\n                    self.addTab(fid);\n                    openFiles.push(file);\n                    menuButtons.setGetkeys(file.open());\n                    tabs.tabs('refresh');\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('updateMenu', updateMenu);\n                };\n                this.closeFile = function(file) {\n                    if (!file.isOpen()) {\n                        return;\n                    }\n                    var pos;\n                    var fid = file.getId();\n                    file.close();\n                    VPLUI.hideIDEStatus();\n                    self.removeTab(fid);\n                    var ptab = self.getTabPos(fid);\n                    openFiles.splice(ptab, 1);\n                    tabs.tabs('refresh');\n                    adjustTabsTitles(false);\n                    self.fileListVisible(true);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('adjustTabsTitles', adjustTabsTitles, false);\n                    if (openFiles.length == ptab) {\n                        ptab--;\n                    }\n                    if (ptab >= 0 && openFiles.length > ptab) {\n                        pos = self.getFilePosById(openFiles[ptab].getId());\n                        self.gotoFile(pos, 'c');\n                        return;\n                    }\n                };\n                this.isClosed = function(pos) {\n                    return !files[pos].isOpen();\n                };\n                this.fileListVisible = function(b) {\n                    if (b === fileListContainer.vplVisible) {\n                        return;\n                    }\n                    if (b) {\n                        VPLUtil.delay('fileListVisible', function() {\n                            fileListContainer.vplVisible = true;\n                            self.updateFileList();\n                            fileListContainer.show();\n                            autoResizeTab();\n                         });\n                    } else {\n                        VPLUtil.delay('fileListVisible', function() {\n                            fileListContainer.vplVisible = false;\n                            fileListContainer.hide();\n                            autoResizeTab();\n                         });\n                    }\n                };\n                this.isFileListVisible = function() {\n                    return fileListContainer.vplVisible;\n                };\n                this.fileListVisibleIfNeeded = function() {\n                    if (this.isFileListVisible()) {\n                        return;\n                    }\n                    for (var i = 0; i < files.length; i++) {\n                        if (!files[i].isOpen()) {\n                            this.fileListVisible(true);\n                            return;\n                        }\n                    }\n                };\n                this.setFontSize = function(size) {\n                    options.fontSize = size;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].setFontSize(size);\n                    }\n                    terminal.setFontSize(size);\n                };\n                this.getFontSize = function() {\n                    return options.fontSize;\n                };\n                this.addFile = function(file, replace, ok, showError) {\n                    if ((typeof file.name != 'string') || !VPLUtil.validPath(file.name)) {\n                        showError(str('incorrect_file_name') + '\\n(' + file.name + ')');\n                        return false;\n                    }\n                    if (replace !== true) {\n                        replace = false;\n                    }\n                    var pos = this.fileNameExists(file.name);\n                    if (pos != -1) {\n                        if (replace && !files[pos].isReadOnly()) {\n                            files[pos].setContent(file.contents);\n                            self.setModified();\n                            ok();\n                            VPLUtil.delay('updateFileList', self.updateFileList);\n                            return file;\n                        } else {\n                            showError(str('filenotadded', file.name));\n                            return false;\n                        }\n                    }\n                    if (fileNameIncluded(file.name) || twoBlockly('', file.name)) {\n                        showError(str('filenotadded', file.name));\n                        return false;\n                    }\n                    if (files.length >= maxNumberOfFiles) {\n                        showError(str('maxfilesexceeded') + '\\n(' + maxNumberOfFiles + ')');\n                        return false;\n                    }\n                    var fid = VPLUtil.getUniqueId();\n                    var newfile = new VPLFile(fid, file.name, file.contents, this, vplIdeInstance);\n                    if (file.encoding == 1) {\n                        newfile.extendToBinary();\n                    } else {\n                        if (VPLUtil.isBlockly(file.name)) {\n                            newfile.extendToBlockly();\n                        } else {\n                            newfile.extendToCodeEditor();\n                        }\n                    }\n                    newfile.setFileName(file.name);\n                    files.push(newfile);\n                    self.setModified();\n                    if (files.length > 5) {\n                        self.fileListVisible(true);\n                    }\n                    ok();\n                    return newfile;\n                };\n                this.renameFile = function(oldname, newname, showError) {\n                    var pos = this.fileNameExists(oldname);\n                    try {\n                        if (pos == -1) {\n                            throw new Error(\"Internal error: File name not found\");\n                        }\n                        if (files[pos].getId() < this.minNumberOfFiles) {\n                            throw new Error(\"Internal error: Renaming requested filename\");\n                        }\n                        if (files[pos].getFileName() == newname) {\n                            return true; // Equals name file.\n                        }\n                        if (!VPLUtil.validPath(newname) ||\n                               fileNameIncluded(newname) ||\n                               twoBlockly(oldname, newname)) {\n                            throw str('incorrect_file_name');\n                        }\n                        if (VPLUtil.isBinary(oldname) && VPLUtil.fileExtension(oldname) != VPLUtil.fileExtension(newname)) {\n                            throw str('incorrect_file_name');\n                        }\n                        if (VPLUtil.isBlockly(oldname) != VPLUtil.isBlockly(newname)) {\n                            if (files[pos].getContent() > '') {\n                                showMessage(str('delete_file_fq', oldname), {\n                                    ok: function() {\n                                        var file = {\n                                            name: newname,\n                                            contents: '',\n                                            encoding: 0\n                                        };\n                                        fileManager.deleteFile(oldname, showError);\n                                        var fileResult = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                                        if (fileResult) {\n                                            fileManager.gotoFileName(newname);\n                                        }\n                                    }\n                                });\n                            } else {\n                                var file = {\n                                    name: newname,\n                                    contents: '',\n                                    encoding: 0\n                                };\n                                fileManager.deleteFile(oldname, showError);\n                                var fileResult = fileManager.addFile(file, false, updateMenu, showError);\n                                if (fileResult) {\n                                    fileManager.gotoFileName(newname);\n                                }\n                            }\n                            return true;\n                        }\n                        files[pos].setFileName(newname);\n                    } catch (e) {\n                        showError(str('filenotrenamed', oldname) + '\\n' + e);\n                        return false;\n                    }\n                    self.setModified();\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.directoryExists = function(dirName) {\n                    var checkName = dirName.toLowerCase() + '/';\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getFileName().toLowerCase().startsWith(checkName)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n                this.renameDirectory = function(oldName, newName, showError) {\n                    if (oldName == newName) {\n                        return false;\n                    }\n                    try {\n                        if (!this.directoryExists(oldName)) {\n                            throw new Error(\"Trying to rename a directory that doesn't exist: \" + oldName);\n                        }\n                        if (!VPLUtil.validPath(newName + '/file.txt')) {\n                            throw str('incorrect_directory_name');\n                        }\n                        // Prepare new names\n                        var oldNameLength = oldName.length + 1;\n                        var checkDirName = oldName.toLowerCase() + '/';\n                        var newFileNames = [];\n                        var i;\n                        for (i = 0; i < files.length; i++) {\n                            var fileName = files[i].getFileName();\n                            if (fileName.toLowerCase().startsWith(checkDirName)) {\n                                if (files[i].getId() < this.minNumberOfFiles) { // Renaming required filename\n                                    throw str('incorrect_file_name');\n                                }\n                                newFileNames[i] = newName + '/' + fileName.substr(oldNameLength);\n                            }\n                        }\n                        if (this.directoryExists(newName)) { // Checks if the merge is possible (no repeated names)\n                            var oldNames = [];\n                            for (i = 0; i < files.length; i++) {\n                                oldNames[files[i].getFileName().toLowerCase()] = true;\n                            }\n                            for (i = 0; i < files.length; i++) {\n                                if (newFileNames[i] && oldNames[newFileNames[i].toLowerCase()]) {\n                                    throw str('incorrect_file_name');\n                                }\n                            }\n                        }\n                        // Set the new file names\n                        for (i = 0; i < newFileNames.length; i++) {\n                            if (newFileNames[i]) {\n                                files[i].setFileName(newFileNames[i]);\n                            }\n                        }\n                    } catch (e) {\n                        showError(str('directory_not_renamed', oldName) + '\\n' + e);\n                        return false;\n                    }\n                    self.setModified();\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.deleteFile = function(name, showError) {\n                    var pos = this.fileNameExists(name);\n                    if (pos == -1) {\n                        showError(str('filenotdeleted', name));\n                        return false;\n                    }\n                    if (files[pos].getId() < minNumberOfFiles) {\n                        showError(str('filenotdeleted', name));\n                        return false;\n                    }\n                    this.setModified();\n                    this.closeFile(files[pos]);\n                    files.splice(pos, 1);\n                    if (openFiles.length == 0) {\n                        VPLUI.hideIDEStatus();\n                    }\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.currentFile = function() {\n                    var id = tabs.tabs('option', 'active');\n                    if (id in openFiles) {\n                        var file = openFiles[id];\n                        if (arguments.length === 0) {\n                            return file;\n                        }\n                        var action = arguments[0];\n                        if (typeof file[action] === 'function') {\n                            var fun = file[action];\n                            var args = Array.prototype.slice(arguments);\n                            args.shift();\n                            return fun.apply(file, args);\n                        }\n                    }\n                    return false;\n                };\n                this.getCurrentFileName = function() {\n                    var currentFileName = '';\n                    var currentFile = fileManager.currentFile();\n                    if (currentFile) {\n                        currentFileName = currentFile.name;\n                    }\n                    return currentFileName;\n                };\n                this.currentPos = function() {\n                    return tabs.tabs('option', 'active');\n                };\n                this.getFileTab = function(id) {\n                    for (var i = 0; i < openFiles.length; i++) {\n                        if (openFiles[i].getId() == id) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                this.getFilePosById = function(id) {\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getId() == id) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                this.gotoFile = function(pos, l) {\n                    var file = files[pos];\n                    self.open(file);\n                    tabs.tabs('option', 'active', self.getFileTab(file.getId()));\n                    if (l !== 'c') {\n                        file.gotoLine(parseInt(l, 10));\n                    }\n                    file.focus();\n                };\n                this.gotoFileLink = function(a) {\n                    var tag = $(a);\n                    var fname = tag.data('file');\n                    var fpos = -1;\n                    if (fname > '') {\n                        fpos = this.fileNameExists(fname);\n                    } else {\n                        fpos = self.getFilePosById(tag.data('fileid'));\n                    }\n                    if (fpos >= 0) {\n                        var line = tag.data('line');\n                        if (typeof line == 'undefined') {\n                            line = 'c';\n                        }\n                        self.gotoFile(fpos, line);\n                        return true;\n                    }\n                    return false;\n                };\n                this.gotoFileName = function(fname, line) {\n                    var fpos = this.fileNameExists(fname);\n                    if (fpos >= 0) {\n                        if (typeof line == 'undefined') {\n                            line = 'c';\n                        }\n                        self.gotoFile(fpos, line);\n                        return true;\n                    }\n                    return false;\n                };\n                this.getFilesToSave = function() {\n                    var ret = [];\n                    for (var i = 0; i < files.length; i++) {\n                        var file = {};\n                        file.name = files[i].getFileName();\n                        file.contents = files[i].getContent();\n                        file.encoding = files[i].isBinary() ? 1 : 0;\n                        ret.push(file);\n                    }\n                    return ret;\n                };\n                this.resetModified = function() {\n                    modified = false;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].resetModified();\n                    }\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                };\n                this.setModified = function() {\n                    modified = true;\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('updateMenu', updateMenu);\n                };\n                this.isModified = function() {\n                    return modified;\n                };\n                this.length = function() {\n                    return files.length;\n                };\n                this.clearAnnotations = function() {\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].clearAnnotations();\n                    }\n                };\n                this.getFile = function(i) {\n                    return files[i];\n                };\n                this.getFiles = function() {\n                    return files;\n                };\n                this.getDirectoryStructure = function() {\n                    var structure = {\n                        isDir: true,\n                        content: {},\n                        path: '',\n                    };\n                    /**\n                     * Adds a new file the structure of directories\n                     * @param {int} i Index of file to add in the file array\n                     */\n                    function addFilePath(i) {\n                        var file = files[i];\n                        var fileName = file.getFileName();\n                        var path = fileName.split(\"/\");\n                        var curdir = structure;\n                        var pathdir = '';\n                        for (var p = 0; p < path.length; p++) {\n                            var part = path[p];\n                            if (p == path.length - 1) { // File.\n                                curdir.content[part] = {\n                                    isDir: false,\n                                    content: file,\n                                    pos: i,\n                                };\n                            } else {\n                                pathdir += part;\n                                if (!curdir.content[part]) { // New dir.\n                                    curdir.content[part] = {\n                                        isDir: true,\n                                        content: {},\n                                        path: pathdir,\n                                    };\n                                }\n                                // Descend Dir.\n                                pathdir += '/';\n                                curdir = curdir.content[part];\n                            }\n                        }\n                    }\n                    for (var i in files) {\n                        if (files.hasOwnProperty(i)) {\n                            addFilePath(i);\n                        }\n                    }\n                    return structure;\n                };\n                this.generateFileList = function() {\n                    if (!self.isFileListVisible()) {\n                        return;\n                    }\n                    var dirIndent = '<span class=\"vpl_ide_dirindent\"></span>';\n                    /**\n                     * Generates an array of string with the HTML code to represent the list of IDE files\n                     * @param {Object} dir Current directory\n                     * @param {int} indent Html code to indent subdirectories\n                     * @param {Array} lines Output. Each line contains the HTML to represent an IDE file\n                     */\n                    function lister(dir, indent, lines) {\n                        var name, fd, sname, attrs, dirline, file, path, line;\n                        for (name in dir.content) {\n                            if (dir.content.hasOwnProperty(name)) {\n                                fd = dir.content[name];\n                                if (fd.isDir) {\n                                    var dirpath = VPLUtil.sanitizeText(fd.path);\n                                    attrs = 'href=\"#\" data-dirname=\"' + dirpath + '\" ';\n                                    sname = VPLUtil.sanitizeText(name);\n                                    dirline = indent;\n                                    dirline += VPLUI.iconFolder() + '<a ' + attrs + '>' + sname + '</a>';\n                                    lines.push(dirline);\n                                    lister(fd, indent + dirIndent, lines);\n                                } else {\n                                    file = fd.content;\n                                    sname = VPLUtil.sanitizeText(name);\n                                    path = VPLUtil.sanitizeText(file.getFileName());\n                                    if (file.isOpen()) {\n                                        sname = '<b>' + sname + '</b>';\n                                    }\n                                    attrs = 'href=\"#\" data-fileid=\"' + file.getId() + '\" title=\"' + path + '\"';\n                                    line = '<a ' + attrs + '>' + sname + '</a>';\n                                    if (file.isModified()) {\n                                        line = VPLUI.iconModified() + line;\n                                    }\n                                    if (file.isReadOnly()) {\n                                        line = line + VPLUI.iconReadOnly();\n                                    } else if (file.getId() < minNumberOfFiles) {\n                                        line = line + VPLUI.iconRequired();\n                                    }\n                                    lines.push(indent + line);\n                                }\n                            }\n                        }\n                    }\n\n                    var structure = self.getDirectoryStructure();\n                    var lines = [];\n                    var html = '';\n                    lister(structure, '', lines);\n                    for (var i = 0; i < lines.length; i++) {\n                        html += lines[i] + '<br>';\n                    }\n                    fileListContent.html('<div>' + html + '</div>');\n                };\n                tabsUl.on('click', 'span.vpl_ide_closeicon', function() {\n                    fileManager.closeFile(fileManager.currentFile());\n                });\n                tabsUl.on('dblclick', 'span.vpl_ide_closeicon', menuButtons.getAction('delete'));\n                tabsUl.on('dblclick', 'a', menuButtons.getAction('rename'));\n                fileListContent.on('dblclick', 'a[data-fileid]', menuButtons.getAction('rename'));\n                fileListContent.on('dblclick', 'a[data-dirname]', renameDiretoryAction);\n            }\n            this.updateEvaluationNumber = function(res) {\n                if (typeof res.nevaluations != 'undefined') {\n                    var text = res.nevaluations;\n                    if (typeof res.reductionbyevaluation != 'undefined'\n                         && res.reductionbyevaluation > ''\n                         && res.reductionbyevaluation != 0) {\n                        if (res.freeevaluations != 0) {\n                            text = text + '/' + res.freeevaluations;\n                        }\n                        text = text + ' -' + res.reductionbyevaluation;\n                    }\n                    menuButtons.setExtracontent('evaluate', text);\n                }\n            };\n            this.lastResult = null;\n            this.getTerminal = function() {\n                return terminal;\n            };\n            this.setResultGrade = function(content, raw) {\n                var name = 'grade';\n                var titleclass = 'vpl_ide_accordion_t_' + name;\n                var contentclass = 'vpl_ide_accordion_c_' + name;\n                if (result.find('.' + contentclass).length == 0) {\n                    result.append('<div class=\"' + titleclass + '\"></div>');\n                    result.append('<div class=\"' + contentclass + '\"></div>');\n                }\n                if (typeof raw == 'undefined') {\n                    return result.find('h4.' + titleclass).length > 0;\n                }\n                var titleTag = result.find('.' + titleclass);\n                if (content > '') {\n                    titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + content + '</h4>');\n                    return true;\n                } else {\n                    titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\n                    return false;\n                }\n            };\n            this.setResultTab = function(name, content, raw) {\n                var titleclass = 'vpl_ide_accordion_t_' + name;\n                var contentclass = 'vpl_ide_accordion_c_' + name;\n                if (result.find('.' + contentclass).length == 0) {\n                    result.append('<div class=\"' + titleclass + '\"></div>');\n                    result.append('<div class=\"' + contentclass + '\"></div>');\n                }\n                if (typeof raw == 'undefined') {\n                    return result.find('h4.' + titleclass).length > 0;\n                }\n                var titleTag = result.find('.' + titleclass);\n                var contentTag = result.find('.' + contentclass);\n                var HTMLcontent = $('<div>' + content + '</div>');\n                HTMLcontent.find('h4').replaceWith(function() {\n                    return $(\"<h5>\").append($(this).contents());\n                });\n                if (contentTag.html() == HTMLcontent.html()) {\n                    return content > '';\n                }\n                if (content > '') {\n                    titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + str(name) + '</h4>');\n                    contentTag.replaceWith('<div class=\"ui-widget ' + contentclass + '\">' + HTMLcontent.html() + '</div>');\n                    return true;\n                } else {\n                    titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\n                    contentTag.replaceWith('<div class=\"' + contentclass + '\"></div>');\n                    return false;\n                }\n            };\n            this.setResult = function(res, go) {\n                self.updateEvaluationNumber(res);\n                var files = fileManager.getFiles();\n                var fileNames = [];\n                var i;\n                for (i = 0; i < files.length; i++) {\n                    fileNames[i] = files[i].getFileName();\n                    files[i].clearAnnotations();\n                }\n                var show = false;\n                var hasContent;\n                var grade = VPLUtil.sanitizeText(res.grade);\n                var gradeShow;\n                var formated;\n                gradeShow = self.setResultGrade(grade, res.grade);\n                show = show || gradeShow;\n                hasContent = self.setResultTab('variables', res.variables, res.variables);\n                show = show || hasContent;\n                formated = VPLUtil.processResult(res.compilation, fileNames, files, true, false);\n                hasContent = self.setResultTab('compilation', formated, res.compilation);\n                show = show || hasContent;\n                formated = VPLUtil.processResult(res.evaluation, fileNames, files, false, false);\n                hasContent = self.setResultTab('comments', formated, res.evaluation);\n                show = show || hasContent;\n                formated = VPLUtil.sanitizeText(res.execution);\n                hasContent = self.setResultTab('execution', formated, res.execution);\n                show = show || hasContent;\n                hasContent = self.setResultTab('description', window.VPLDescription, window.VPLDescription);\n                if (hasContent && typeof MathJax == 'object') { // MathJax workaround.\n                    var math = result.find(\".vpl_ide_accordion_c_description\")[0];\n                    MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, math]);\n                }\n                show = show || hasContent;\n                if (show) {\n                    resultContainer.show();\n                    resultContainer.vplVisible = true;\n                    result.accordion(\"refresh\");\n                    result.accordion('option', 'active', gradeShow ? 1 : 0);\n                    for (i = 0; i < files.length; i++) {\n                        var anot = files[i].getAnnotations();\n                        for (var j = 0; j < anot.length; j++) {\n                            if (go || anot[j].type == 'error') {\n                                fileManager.gotoFile(i, anot[j].row + 1);\n                                break;\n                            }\n                        }\n                    }\n                    $('#vpl_ide_shrightpanel').show();\n                } else {\n                    resultContainer.hide();\n                    resultContainer.vplVisible = false;\n                    $('#vpl_ide_shrightpanel').hide();\n                }\n                VPLUtil.delay('autoResizeTab', autoResizeTab);\n            };\n\n            result.accordion({\n                heightStyle: 'fill',\n                header: 'h4',\n                animate: false,\n                beforeActivate: avoidSelectGrade,\n            });\n            resultContainer.width(2 * resultContainer.vplMinWidth);\n            result.on('click', 'a', function(event) {\n                if (fileManager.gotoFileLink(event.currentTarget)) {\n                    event.preventDefault();\n                }\n            });\n            resultContainer.vplVisible = false;\n            resultContainer.hide();\n\n            fileListContainer.addClass('ui-tabs ui-widget ui-widget-content ui-corner-all');\n            fileList.text(str('filelist'));\n            fileList.html(VPLUI.iconFolder() + fileList.html());\n            fileList.addClass(\"ui-widget-header ui-button-text-only ui-corner-all\");\n            fileListContent.addClass(\"ui-widget ui-corner-all\");\n            fileListContainer.width(2 * fileListContainer.vplMinWidth);\n            fileListContainer.on('click', 'a', function(event) {\n                event.preventDefault();\n                fileManager.gotoFileLink(event.currentTarget);\n            });\n            fileListContainer.vplVisible = false;\n            fileListContainer.hide();\n            var tabsAir = false;\n            /**\n             * Returns separation space\n             * @returns {int} size in pixels\n             */\n            function getTabsAir() {\n                if (tabsAir === false) {\n                    tabsAir = (tabs.outerWidth(true) - tabs.width()) / 2;\n                }\n                return tabsAir;\n            }\n            /**\n             * Resize tab width\n             * @param {Event} e Unused\n             * @param {Object} ui UI object\n             */\n            function resizeTabWidth(e, ui) {\n                var diffLeft = ui.position.left - ui.originalPosition.left;\n                var maxWidth;\n                if (diffLeft !== 0) {\n                    maxWidth = tabs.width() + fileListContainer.width() - fileListContainer.vplMinWidth;\n                    tabs.resizable('option', 'maxWidth', maxWidth);\n                    fileListContainer.width(fileListContainer.vplOriginalWidth + diffLeft);\n                } else {\n                    maxWidth = tabs.width() + resultContainer.width() - resultContainer.vplMinWidth;\n                    tabs.resizable('option', 'maxWidth', maxWidth);\n                    var diffWidth = ui.size.width - ui.originalSize.width;\n                    resultContainer.width(resultContainer.vplOriginalWidth - diffWidth);\n                }\n                fileManager.currentFile('adjustSize');\n            }\n            var resizableOptions = {\n                containment: 'parent',\n                resize: resizeTabWidth,\n                start: function() {\n                    $(window).off('resize', autoResizeTab);\n                    tabs.resizable('option', 'minWidth', 100);\n                    if (resultContainer.vplVisible) {\n                        resultContainer.vplOriginalWidth = resultContainer.width();\n                    }\n                    if (fileListContainer.vplVisible) {\n                        fileListContainer.vplOriginalWidth = fileListContainer.width();\n                    }\n                },\n                stop: function(e, ui) {\n                    resizeTabWidth(e, ui);\n                    tabs.resizable('option', 'maxWidth', 100000);\n                    tabs.resizable('option', 'minWidth', 0);\n                    autoResizeTab();\n                    $(window).on('resize', autoResizeTab);\n                },\n                handles: \"\"\n            };\n            tabs.resizable(resizableOptions);\n             /**\n              * Updates handles for internal IDE resize\n              */\n            function updateTabsHandles() {\n                var handles = ['e', 'w', 'e', 'e, w'];\n                var index = 0;\n                index += fileListContainer.vplVisible ? 1 : 0;\n                index += resultContainer.vplVisible ? 2 : 0;\n                tabs.resizable('destroy');\n                resizableOptions.handles = handles[index];\n                resizableOptions.disable = index === 0;\n                tabs.resizable(resizableOptions);\n            }\n            /**\n             * Resize the IDE height\n             */\n            function resizeHeight() {\n                var newHeight = $(window).outerHeight();\n                newHeight -= menu.offset().top + menu.height() + (fullScreen ? getTabsAir() : 20);\n                if (newHeight < 250) {\n                    newHeight = 250;\n                }\n                tr.height(newHeight);\n                var panelHeight = newHeight - 3 * getTabsAir();\n                tabs.height(panelHeight);\n                if (resultContainer.vplVisible) {\n                    resultContainer.height(panelHeight + getTabsAir());\n                    result.accordion('refresh');\n                }\n                if (fileListContainer.vplVisible) {\n                    fileListContent.height(panelHeight - (fileList.outerHeight() + getTabsAir()));\n                    fileListContainer.height(panelHeight);\n                }\n            }\n            adjustTabsTitles = function(center) {\n                var newWidth = tabs.width();\n                var tabsUlWidth = 0;\n                tabsUl.width(100000);\n                var last = tabsUl.children('li:visible').last();\n                if (last.length) {\n                    var parentScrollLeft = tabsUl.parent().scrollLeft();\n                    tabsUlWidth = parentScrollLeft + last.position().left + last.width() + tabsAir;\n                    tabsUl.width(tabsUlWidth);\n                    var file = fileManager.currentFile();\n                    if (file && center) {\n                        var fileTab = $(file.getTabNameId());\n                        var scroll = parentScrollLeft + fileTab.position().left;\n                        scroll -= (newWidth - fileTab.outerWidth()) / 2;\n                        if (scroll < 0) {\n                            scroll = 0;\n                        }\n                        tabsUl.parent().finish().animate({\n                            scrollLeft: scroll\n                        }, 'slow');\n                    }\n                }\n                if (tabsUlWidth < newWidth) {\n                    tabsUl.width('');\n                }\n            };\n            autoResizeTab = function() {\n                var oldWidth = tabs.width();\n                var newWidth = menu.width();\n                var planb = false;\n                updateTabsHandles();\n                tr.width(menu.outerWidth());\n                if (fileListContainer.vplVisible) {\n                    var left = fileListContainer.outerWidth() + tabsAir;\n                    oldWidth += left;\n                    if (left >= 100) {\n                        newWidth -= left;\n                        tabs.css('left', left);\n                    } else {\n                        planb = true;\n                    }\n                } else {\n                    tabs.css('left', 0);\n                }\n                if (resultContainer.vplVisible) {\n                    var right = resultContainer.outerWidth() + tabsAir;\n                    oldWidth += right;\n                    newWidth -= right;\n                    if (newWidth < 100) {\n                        planb = true;\n                    }\n                }\n                if (planb) {\n                    var rel = menu.width() / oldWidth;\n                    var wfl = 0;\n                    if (fileListContainer.vplVisible) {\n                        wfl = fileListContainer.width() * rel;\n                        fileListContainer.width(wfl - tabsAir);\n                        wfl += tabsAir;\n                        tabs.css('left', wfl);\n                    }\n                    tabs.width(tabs.width() * rel);\n                    if (resultContainer.vplVisible) {\n                        resultContainer.width(menu.width() - (wfl + tabs.width() + tabsAir));\n                    }\n                } else {\n                    tabs.width(newWidth);\n                }\n                adjustTabsTitles(true);\n                resizeHeight();\n                fileManager.currentFile('adjustSize');\n            };\n            /**\n             * Transfer focus to current file\n             */\n            function focusCurrentFile() {\n                fileManager.currentFile('focus');\n            }\n            var dialogbaseOptions = $.extend({}, {\n                close: focusCurrentFile\n            }, VPLUI.dialogbaseOptions);\n            /**\n             * Shows a dialog with a message.\n             * @param {string} message\n             * @param {Object} options icon, title, actions handler (ok, yes, no, close)\n             * @returns {JQuery} JQueryUI Dialog object already open\n             */\n            function showMessage(message, options) {\n                return VPLUI.showMessage(message, $.extend({}, dialogbaseOptions, options));\n            }\n            showErrorMessage = function(message) {\n                return VPLUI.showErrorMessage(message, {\n                    close: focusCurrentFile\n                });\n            };\n\n            var dialogNew = $('#vpl_ide_dialog_new');\n            /**\n             * The event handler for the new file action\n             * @param {Object} event\n             * @return {boolean}\n             */\n            function newFileHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return true;\n                }\n                dialogNew.dialog('close');\n                var file = {\n                    name: $('#vpl_ide_input_newfilename').val(),\n                    contents: '',\n                    encoding: 0\n                };\n                var newfile = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                if (newfile) {\n                    fileManager.open(newfile);\n                    tabs.tabs('option', 'active', fileManager.getTabPos(newfile.getId()));\n                    newfile.focus();\n                    return true;\n                }\n                return false;\n            }\n\n            var dialogButtons = {};\n            dialogButtons[str('ok')] = newFileHandler;\n            dialogButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogNew.find('input').on('keypress', newFileHandler);\n            dialogNew.dialog($.extend({}, dialogbaseOptions, {\n                title: str('create_new_file'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogNew, 'new');\n\n            var dialogRename = $('#vpl_ide_dialog_rename');\n            /**\n             * The event handler for the rename current file action\n             * @param {Object} event\n             */\n            function renameHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return;\n                }\n                dialogRename.dialog('close');\n                fileManager.renameFile(fileManager.currentFile('getFileName'),\n                        $('#vpl_ide_input_renamefilename').val(), showErrorMessage);\n                event.preventDefault();\n            }\n            dialogRename.find('input').on('keypress', renameHandler);\n            dialogButtons[str('ok')] = renameHandler;\n            dialogRename.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    $('#vpl_ide_input_renamefilename').val(fileManager.currentFile('getFileName'));\n                },\n                title: str('rename_file'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogRename, 'rename');\n\n            var dialogRenameDirectory = $('#vpl_ide_dialog_renamedir');\n            /**\n             * The event handler for rename a directory\n             * @param {Object} event\n             */\n            function renameDirectoryHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return;\n                }\n                dialogRenameDirectory.dialog('close');\n                fileManager.renameDirectory($('#vpl_ide_input_olddirectoryname').val(),\n                        $('#vpl_ide_input_renamedirectory').val(), showErrorMessage);\n                event.preventDefault();\n            }\n            dialogRenameDirectory.find('input').on('keypress', renameDirectoryHandler);\n            dialogButtons[str('ok')] = renameDirectoryHandler;\n            dialogRenameDirectory.dialog($.extend({}, dialogbaseOptions, {\n                title: str('rename_directory'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogRenameDirectory, 'filelist');\n            renameDiretoryAction = function(event) {\n                if (event.target.hasAttribute('data-dirname')) {\n                    var dirname = event.target.getAttribute('data-dirname');\n                    $('#vpl_ide_input_olddirectoryname').val(dirname);\n                    $('#vpl_ide_input_renamedirectory').val(dirname);\n                    dialogRenameDirectory.dialog('open');\n                }\n            };\n            var dialogComments = $('#vpl_ide_dialog_comments');\n            var oldStudentComments = '';\n            dialogButtons[str('ok')] = function() {\n                if (oldStudentComments != $('#vpl_ide_input_comments').val()) {\n                    fileManager.setModified();\n                }\n                $(this).dialog('close');\n            };\n            dialogComments.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    oldStudentComments = $('#vpl_ide_input_comments').val();\n                },\n                title: str('comments'),\n                width: '40em',\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogComments, 'comments');\n\n            $('#vpl_ide_input_comments').width('30em');\n            var aboutDialog = $('#vpl_ide_dialog_about');\n            var OKButtons = {};\n            OKButtons[str('ok')] = function() {\n                $(this).dialog('close');\n            };\n            var shortcutDialog = $('#vpl_ide_dialog_shortcuts');\n            shortcutDialog.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\n                    $('#vpl_ide_dialog_shortcuts').html(html);\n                },\n                title: str('shortcuts'),\n                width: 400,\n                height: 300,\n                buttons: OKButtons\n            }));\n            shortcutDialog.dialog('option', 'height', 300);\n            VPLUI.setDialogTitleIcon(shortcutDialog, 'shortcuts');\n\n            OKButtons[str('shortcuts')] = function() {\n                $(this).dialog('close');\n                shortcutDialog.dialog('open');\n            };\n            aboutDialog.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\n                    aboutDialog.next().find(\"button\").filter(\n                        function() {\n                            return $(this).text() == str('shortcuts');\n                        }\n                  ).button(html != '' ? 'enable' : 'disable');\n                },\n                title: str('about'),\n                width: 400,\n                height: 300,\n                buttons: OKButtons\n            }));\n            aboutDialog.dialog('option', 'height', 300);\n            VPLUI.setDialogTitleIcon(aboutDialog, 'about');\n\n            var dialogSort = $('#vpl_ide_dialog_sort');\n            var dialogSortButtons = {};\n            dialogSortButtons[str('ok')] = function() {\n                var files = fileManager.getFiles();\n                var regNoNumber = /[^\\d]*/;\n                var sorted = [];\n                var i = 0;\n                var newOrder = $('#vpl_sort_list li');\n                if (newOrder.length != files.length) {\n                    return;\n                }\n                newOrder.each(function() {\n                    var orig = parseInt(this.id.replace(regNoNumber, ''));\n                    sorted.push(files[orig]);\n                });\n                for (i = 0; i < newOrder.length; i++) {\n                    files[i] = sorted[i];\n                }\n                fileManager.setModified();\n                $(this).dialog('close');\n            };\n            dialogSortButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogSort.dialog($.extend({}, dialogbaseOptions, {\n                title: str('sort'),\n                buttons: dialogSortButtons,\n                open: function() {\n                    var list = $('#vpl_sort_list');\n                    list.html('');\n                    var files = fileManager.getFiles();\n                    for (var i = 0; i < files.length; i++) {\n                        var file = $('<li id=\"vpl_fsort_' + i + '\"class=\"ui-widget-content\"></li>');\n                        if (files[i].getId() < minNumberOfFiles) {\n                            file.addClass('ui-state-disabled');\n                        }\n                        file.text((i + 1) + '-' + files[i].getFileName());\n                        list.append(file);\n                    }\n                    list.sortable({\n                        items: \"li:not(.ui-state-disabled)\",\n                        placeholder: \"ui-state-highlight\",\n                        start: function(event, ui) {\n                            ui.item.addClass('ui-state-highlight');\n                        },\n                        stop: function(event, ui) {\n                            ui.item.removeClass('ui-state-highlight');\n                        },\n                    });\n                    list.disableSelection();\n                },\n                maxHeight: 400\n            }));\n            VPLUI.setDialogTitleIcon(dialogSort, 'sort');\n\n            var dialogMultidelete = $('#vpl_ide_dialog_multidelete');\n            var dialogMultideleteButtons = {};\n            dialogMultideleteButtons[str('selectall')] = function() {\n                $(this).find('input').prop(\"checked\", true);\n            };\n            dialogMultideleteButtons[str('deselectall')] = function() {\n                $(this).find('input').prop(\"checked\", false);\n            };\n            dialogMultideleteButtons[str('deleteselected')] = function() {\n                var files = fileManager.getFiles();\n                var toDeleteList = [];\n                var labelList = $('#vpl_multidelete_list label');\n                labelList.each(function() {\n                    var label = $(this);\n                    if (label.find('input').prop('checked')) {\n                        var id = label.data('fileid');\n                        toDeleteList.push(files[id].getFileName());\n                    }\n                });\n                for (var i = 0; i < toDeleteList.length; i++) {\n                    fileManager.deleteFile(toDeleteList[i], showErrorMessage);\n                }\n                VPLUtil.delay('updateMenu', updateMenu);\n                VPLUtil.delay('updateFileList', fileManager.updateFileList);\n                $(this).dialog('close');\n            };\n            dialogMultideleteButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogMultidelete.dialog($.extend({}, dialogbaseOptions, {\n                title: str('multidelete'),\n                buttons: dialogMultideleteButtons,\n                open: function() {\n                    var list = $('#vpl_multidelete_list');\n                    list.html('');\n                    var files = fileManager.getFiles();\n                    for (var i = minNumberOfFiles; i < files.length; i++) {\n                        var name = VPLUtil.sanitizeText(files[i].getFileName());\n                        var file = $('<label><input type=\"checkbox\"> ' + name + '</label>');\n                        file.data('fileid', i);\n                        list.append(file);\n                        list.append('<br>');\n                    }\n                    list.find('label').button();\n                },\n                maxHeight: 400,\n                maxWidth: 400\n            }));\n            VPLUI.setDialogTitleIcon(dialogMultidelete, 'multidelete');\n\n            var dialogFontsize = $('#vpl_ide_dialog_fontsize');\n            var fontsizeSlider = $('#vpl_ide_dialog_fontsize .vpl_fontsize_slider');\n            var dialogFontFizeButtons = {};\n            dialogFontFizeButtons[str('ok')] = function() {\n                var value = fontsizeSlider.slider(\"value\");\n                fileManager.setFontSize(value);\n                $(this).dialog('close');\n                $.ajax({\n                    async: true,\n                    type: \"POST\",\n                    url: '../editor/userpreferences.json.php',\n                    'data': JSON.stringify({fontSize: value}),\n                    contentType: \"application/json; charset=utf-8\",\n                    dataType: \"json\"\n                });\n            };\n            dialogFontFizeButtons[str('cancel')] = function() {\n                fileManager.setFontSize(fontsizeSlider.data(\"vpl_fontsize\"));\n                $(this).dialog('close');\n            };\n            dialogFontFizeButtons[str('reset')] = function() {\n                fontsizeSlider.slider('value', 12);\n            };\n            dialogFontsize.dialog($.extend({}, dialogbaseOptions, {\n                title: str('fontsize'),\n                buttons: dialogFontFizeButtons,\n                open: function() {\n                    fontsizeSlider.data(\"vpl_fontsize\", fileManager.getFontSize());\n                    fontsizeSlider.slider('value', fileManager.getFontSize());\n                },\n            }));\n            fontsizeSlider.slider({\n                min: 1,\n                max: 48,\n                change: function() {\n                    var value = fontsizeSlider.slider(\"value\");\n                    fileManager.setFontSize(value);\n                    dialogFontsize.find('.vpl_fontsize_slider_value').text(value);\n                }\n            });\n            VPLUI.setDialogTitleIcon(dialogFontsize, 'fontsize');\n\n            var dialogAceTheme = $('#vpl_ide_dialog_acetheme');\n            var acethemeSelect = $('#vpl_ide_dialog_acetheme select');\n            var dialogAceThemeButtons = {};\n            dialogAceThemeButtons[str('ok')] = function() {\n                fileManager.setTheme(acethemeSelect.val());\n                $(this).dialog('close');\n                VPLUtil.setUserPreferences({aceTheme: acethemeSelect.val()});\n            };\n            dialogAceThemeButtons[str('cancel')] = function() {\n                fileManager.setTheme(acethemeSelect.data(\"acetheme\"));\n                $(this).dialog('close');\n            };\n            dialogAceThemeButtons[str('reset')] = function() {\n                acethemeSelect.val(acethemeSelect.data(\"acetheme\"));\n                fileManager.setTheme(acethemeSelect.val());\n            };\n            dialogAceTheme.dialog($.extend({}, dialogbaseOptions, {\n                title: str('theme'),\n                buttons: dialogAceThemeButtons,\n                modal: false,\n                open: function() {\n                    acethemeSelect.data(\"acetheme\", fileManager.getTheme());\n                    acethemeSelect.val(fileManager.getTheme());\n                },\n            }));\n            acethemeSelect.on('change', function() {\n                    fileManager.setTheme(acethemeSelect.val());\n            });\n            VPLUI.setDialogTitleIcon(dialogAceTheme, 'theme');\n\n            var terminal = new VPLTerminal('vpl_dialog_terminal', 'vpl_terminal', str);\n            var VNCClient = new VPLVNCClient('vpl_dialog_vnc', str);\n            var lastConsole = terminal;\n            var fileSelect = $('#vpl_ide_input_file');\n            var fileSelectHandler = function() {\n                VPLUI.readSelectedFiles(this.files, function(file) {\n                    return fileManager.addFile(file, true, updateMenu, showErrorMessage);\n                },\n                function() {\n                    fileManager.fileListVisibleIfNeeded();\n                });\n            };\n            fileSelect.on('change', fileSelectHandler);\n            // Menu acctions.\n            menuButtons.add({\n                name: 'filelist',\n                originalAction: function() {\n                    fileManager.fileListVisible(!fileManager.isFileListVisible());\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                    VPLUtil.delay('updateFileList', fileManager.updateFileList);\n                },\n                bindKey: {\n                    win: 'Ctrl-L',\n                    mac: 'Ctrl-L'\n                }\n            });\n\n            menuButtons.add({\n                name: 'new',\n                originalAction: function() {\n                    if (fileManager.length() < maxNumberOfFiles) {\n                        dialogNew.dialog('open');\n                    }\n                },\n                bindKey: {\n                    win: 'Alt-N',\n                    mac: 'Option-N'\n                }\n            });\n            menuButtons.add({\n                name: 'rename',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (file && file.getId() >= minNumberOfFiles) {\n                        dialogRename.dialog('open');\n                    }\n                },\n                bindKey: {\n                    win: 'Ctrl-R',\n                    mac: 'Ctrl-R'\n                }\n            });\n            menuButtons.add({\n                name: 'delete',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (!file) {\n                        return;\n                    }\n                    var filename = file.getFileName();\n                    var message = str('delete_file_fq', filename);\n                    showMessage(message, {\n                        ok: function() {\n                            fileManager.deleteFile(filename, showErrorMessage);\n                        },\n                        title: str('delete_file_q'),\n                        icon: 'trash'\n                    });\n                },\n                bindKey: {\n                    win: 'Ctrl-D',\n                    mac: 'Ctrl-D'\n                }\n            });\n            menuButtons.add({\n                name: 'close',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (!file) {\n                        return;\n                    }\n                    fileManager.closeFile(file);\n                },\n                bindKey: {\n                    win: 'Alt-W',\n                    mac: 'Option-W'\n                }\n            });\n            menuButtons.add({\n                name: 'import',\n                originalAction: function() {\n                    fileSelect.val('');\n                    fileSelect.trigger('click');\n                },\n                bindKey: {\n                    win: 'Ctrl-I',\n                    mac: 'Ctrl-I'\n                }\n            });\n            menuButtons.add({\n                name: 'sort',\n                originalAction: function() {\n                    dialogSort.dialog('open');\n                },\n                bindKey: {\n                    win: 'Ctrl-O',\n                    mac: 'Ctrl-O'\n                }\n            });\n            menuButtons.add({\n                name: 'multidelete',\n                originalAction: function() {\n                    dialogMultidelete.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'fontsize',\n                originalAction: function() {\n                    dialogFontsize.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'theme',\n                originalAction: function() {\n                    dialogAceTheme.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'print',\n                originalAction: function() {\n                    window.print();\n                },\n                bindKey: {\n                    win: 'Alt-P',\n                    mac: 'Command-P'\n                }\n            });\n            menuButtons.add({\n                name: 'undo',\n                originalAction: function() {\n                    fileManager.currentFile('undo');\n                }\n            });\n            menuButtons.add({\n                name: 'redo',\n                originalAction: function() {\n                    fileManager.currentFile('redo');\n                }\n            });\n            menuButtons.add({\n                name: 'select_all',\n                editorName: 'selectall',\n                originalAction: function() {\n                    fileManager.currentFile('selectAll');\n                }\n            });\n            menuButtons.add({\n                name: 'find',\n                originalAction: function() {\n                    fileManager.currentFile('find');\n                }\n            });\n            menuButtons.add({\n                name: 'find_replace',\n                editorName: 'replace',\n                originalAction: function() {\n                    fileManager.currentFile('replace');\n                }\n            });\n            menuButtons.add({\n                name: 'next',\n                editorName: 'findnext',\n                originalAction: function() {\n                    fileManager.currentFile('next');\n                }\n            });\n            menuButtons.add({\n                name: 'fullscreen',\n                originalAction: function() {\n                    if (fullScreen) {\n                        rootObj.removeClass('vpl_ide_root_fullscreen');\n                        $('body').removeClass('vpl_body_fullscreen');\n                        menuButtons.setText('fullscreen', 'fullscreen');\n                        $('#vpl_ide_user').hide();\n                        fullScreen = false;\n                    } else {\n                        $('body').addClass('vpl_body_fullscreen').scrollTop(0);\n                        rootObj.addClass('vpl_ide_root_fullscreen');\n                        menuButtons.setText('fullscreen', 'regularscreen');\n                        if (options.username) {\n                            $('#vpl_ide_user').show();\n                        }\n                        fullScreen = true;\n                    }\n                    focusCurrentFile();\n                    setTimeout(autoResizeTab, 10);\n                },\n                bindKey: {\n                    win: 'Alt-F',\n                    mac: 'Ctrl-F'\n                }\n            });\n            menuButtons.add({\n                name: 'download',\n                originalAction: function() {\n                    window.location = options.download;\n                }\n            });\n            /**\n             * Reset files action\n             */\n            function resetFiles() {\n                VPLUI.requestAction('resetfiles', '', {}, options.ajaxurl)\n                .done(function(response) {\n                    var files = response.files;\n                    for (var fileName in files) {\n                        if (files.hasOwnProperty(fileName)) {\n                            fileManager.addFile(files[fileName], true, VPLUtil.doNothing, showErrorMessage);\n                        }\n                    }\n                    fileManager.fileListVisibleIfNeeded();\n                    VPLUtil.delay('updateMenu', updateMenu);\n                }).fail(showErrorMessage);\n            }\n            menuButtons.add({\n                name: 'resetfiles',\n                originalAction: function() {\n                    showMessage(str('sureresetfiles'), {\n                        title: str('resetfiles'),\n                        ok: resetFiles,\n                        icon: 'resetfiles'\n                    });\n                }\n            });\n            var noconfirmation = false;\n            menuButtons.add({\n                name: 'save',\n                originalAction: function() {\n                    var data = {\n                        files: fileManager.getFilesToSave(),\n                        comments: $('#vpl_ide_input_comments').val(),\n                        version: noconfirmation ? -1 : fileManager.getVersion()\n                    };\n                    if (JSON.stringify(data).length > options.postMaxSize) {\n                        showErrorMessage(str('maxpostsizeexceeded'));\n                        return;\n                    }\n                    /**\n                     * Save action\n                     */\n                    function doSave() {\n                        VPLUI.requestAction('save', 'saving', data, options.ajaxurl)\n                        .done(function(response) {\n                            if (response.requestsconfirmation && !noconfirmation) {\n                                var checkboxID = 'vpl_donotshowagain';\n                                var donotshowagain = '<input type=\"checkbox\" id=\"' + checkboxID +'\"'\n                                                    + ' class=\"align-text-bottom mr-1 mt-3\">'\n                                                    + '<label for=\"' + checkboxID + '\">' + str('donotshowagain') + '</label>';\n                                var $checkbox;\n                                showMessage(response.question + '<br>' + donotshowagain, {\n                                    title: str('saving'),\n                                    icon: 'alert',\n                                    yes: function() {\n                                        if ($checkbox.length == 1 && $checkbox.prop('checked')) {\n                                            noconfirmation = true;\n                                        }\n                                        data.version = 0;\n                                        doSave();\n                                    }\n                                });\n                                $checkbox = $('#' + checkboxID);\n                            } else {\n                                fileManager.resetModified();\n                                fileManager.setVersion(response.version);\n                                menuButtons.setTimeLeft(response);\n                                VPLUtil.delay('updateMenu', updateMenu);\n                                if (VPLUI.monitorRunning()) {\n                                    data.processid = VPLUtil.getProcessId();\n                                    VPLUI.requestAction('update', 'updating', data, options.ajaxurl);\n                                }\n                            }\n                        }).fail(showErrorMessage);\n                    }\n                    doSave();\n                },\n                bindKey: {\n                    win: 'Ctrl-S',\n                    mac: 'Command-S'\n                }\n            });\n\n            /**\n             * Launches the action\n             *\n             * @param {string} action Action 'run', 'debug', 'evaluate'\n             * @param {string} acting I18n for the action in progress\n             * @param {string} data Data attached to the action\n             */\n            function executionRequest(action, acting, data) {\n                if (!data) {\n                    data = {};\n                }\n                if (!lastConsole.isConnected()) {\n                    VPLUI.requestAction(action, '', data, options.ajaxurl)\n                    .done(function(response) {\n                        VPLUI.webSocketMonitor(response, action, acting, executionActions);\n                    })\n                    .fail(showErrorMessage);\n                }\n            }\n            /**\n             * Launches the run action\n             */\n            function runAction() {\n                executionRequest('run', 'running', {\n                    XGEOMETRY: VNCClient.getCanvasSize(),\n                    currentFileName: fileManager.getCurrentFileName(),\n                });\n            }\n            menuButtons.add({\n                name: 'run',\n                originalAction: function() {\n                    executionActions.setLastAction(runAction);\n                    runAction();\n                },\n                bindKey: {\n                    win: 'Ctrl-F11',\n                    mac: 'Command-U'\n                }\n            });\n            /**\n             * Launches the debug action\n             */\n            function debugAction() {\n                executionRequest('debug', 'debugging', {\n                    XGEOMETRY: VNCClient.getCanvasSize(),\n                    currentFileName: fileManager.getCurrentFileName(),\n                });\n            }\n            menuButtons.add({\n                name: 'debug',\n                originalAction: function() {\n                    executionActions.setLastAction(debugAction);\n                    debugAction();\n                },\n                bindKey: {\n                    win: 'Alt-F11',\n                    mac: 'Option-U'\n                }\n            });\n            /**\n             * Launches the evaluate action\n             */\n            function evaluateAction() {\n                executionRequest('evaluate', 'evaluating');\n            }\n            menuButtons.add({\n                name: 'evaluate',\n                originalAction: function() {\n                    executionActions.setLastAction(evaluateAction);\n                    evaluateAction();\n                },\n                bindKey: {\n                    win: 'Shift-F11',\n                    mac: 'Command-Option-U'\n                }\n            });\n            menuButtons.add({\n                name: 'comments',\n                originalAction: function() {\n                    dialogComments.dialog('open');\n                },\n            });\n            menuButtons.add({\n                name: 'console',\n                originalAction: function() {\n                    if (lastConsole.isOpen()) {\n                        lastConsole.close();\n                    } else {\n                        lastConsole.show();\n                    }\n                }\n            });\n            menuButtons.add({name: 'user'});\n            menuButtons.add({\n                name: 'about',\n                originalAction: function() {\n                    aboutDialog.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'timeleft',\n                originalAction: function() {\n                    menuButtons.toggleTimeLeft();\n                }\n            });\n            menuButtons.add({\n                name: 'more',\n                originalAction: function() {\n                    var tag = $('#vpl_ide_menuextra');\n                    if (tag.is(\":visible\")) {\n                        menuButtons.setText('more', 'more', VPLUtil.str('more'));\n                        tag.hide();\n                    } else {\n                        menuButtons.setText('more', 'less', VPLUtil.str('less'));\n                        tag.show();\n                    }\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                }\n            });\n            menuButtons.add({\n                name: 'shrightpanel',\n                icon: 'close-rightpanel',\n                originalAction: function() {\n                    if (resultContainer.vplVisible) {\n                        resultContainer.hide();\n                        resultContainer.vplVisible = false;\n                        menuButtons.setText('shrightpanel', 'open-rightpanel', VPLUtil.str('shrightpanel'));\n                    } else {\n                        menuButtons.setText('shrightpanel', 'close-rightpanel', VPLUtil.str('shrightpanel'));\n                        resultContainer.show();\n                        resultContainer.vplVisible = true;\n                    }\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                },\n                bindKey: {\n                    win: 'Ctrl-M',\n                    mac: 'Ctrl-M'\n                }\n            });\n            var rightpanelstyle = \"position:absolute;right:0;top:60px;z-index:100;margin:3px\";\n            tr.append('<span style=\"' + rightpanelstyle + '\">' + menuButtons.getHTML('shrightpanel') + '</span>');\n            var rightPanelButton = $('#vpl_ide_shrightpanel');\n            menuButtons.setText('shrightpanel', 'close-rightpanel', VPLUtil.str('shrightpanel'));\n\n            rightPanelButton.button();\n            rightPanelButton.css('padding', '0');\n            $('#vpl_ide_shrightpanel.ui-button-text').css('padding', '0');\n            rightPanelButton.on('click', function() {\n                menuButtons.launchAction('shrightpanel');\n            });\n            rightPanelButton.hide();\n            menu.addClass(\"ui-widget-header ui-corner-all\");\n            var menuHtml = \"\";\n            menuHtml += menuButtons.getHTML('more');\n            menuHtml += menuButtons.getHTML('save');\n            menuHtml += \"<span id='vpl_ide_mexecution'>\";\n            menuHtml += menuButtons.getHTML('run');\n            menuHtml += menuButtons.getHTML('debug');\n            menuHtml += menuButtons.getHTML('evaluate');\n            menuHtml += menuButtons.getHTML('comments');\n            menuHtml += menuButtons.getHTML('console');\n            menuHtml += \"</span> \";\n            menuHtml += \"<span id='vpl_ide_menuextra'>\";\n            menuHtml += \"<span id='vpl_ide_file'>\";\n            // TODO autosave not implemented.\n            menuHtml += menuButtons.getHTML('filelist');\n            menuHtml += menuButtons.getHTML('new');\n            menuHtml += menuButtons.getHTML('rename');\n            menuHtml += menuButtons.getHTML('delete');\n            menuHtml += menuButtons.getHTML('import');\n            menuHtml += menuButtons.getHTML('download');\n            menuHtml += menuButtons.getHTML('resetfiles');\n            menuHtml += menuButtons.getHTML('sort');\n            menuHtml += menuButtons.getHTML('multidelete');\n            menuHtml += menuButtons.getHTML('fontsize');\n            menuHtml += menuButtons.getHTML('theme');\n            menuHtml += \"</span> \";\n            // TODO print still not implemented.\n            menuHtml += \"<span id='vpl_ide_edit'>\";\n            menuHtml += menuButtons.getHTML('undo');\n            menuHtml += menuButtons.getHTML('redo');\n            menuHtml += menuButtons.getHTML('select_all');\n            menuHtml += menuButtons.getHTML('find');\n            menuHtml += menuButtons.getHTML('find_replace');\n            menuHtml += menuButtons.getHTML('next');\n            menuHtml += \"</span> \";\n            menuHtml += \"</span> \";\n            menuHtml += menuButtons.getHTML('fullscreen') + ' ';\n            menuHtml += menuButtons.getHTML('about') + ' ';\n            menuHtml += menuButtons.getHTML('user') + ' ';\n            menuHtml += menuButtons.getHTML('timeleft');\n            menuHtml += '<div class=\"clearfix\"></div>';\n            menu.append(menuHtml);\n            $('#vpl_ide_more').button();\n            $('#vpl_ide_save').button();\n            $('#vpl_ide_menuextra').hide();\n            $('#vpl_ide_file').controlgroup();\n            $('#vpl_ide_edit').controlgroup();\n            $('#vpl_ide_mexecution').controlgroup();\n            $('#vpl_ide_fullscreen').button();\n            $('#vpl_ide_acetheme').button();\n            $('#vpl_ide_about').button();\n            $('#vpl_ide_user').button().css('float', 'right').hide();\n            $('#vpl_ide_timeleft').button().css('float', 'right').hide();\n            $('#vpl_menu .ui-button').css('padding', '6px');\n            $('#vpl_menu .ui-button-text').css('padding', '0');\n            var alwaysActive = ['filelist', 'more', 'fullscreen', 'about', 'resetfiles',\n                                'download', 'comments', 'console', 'import',\n                                'fontsize', 'timeleft'];\n            for (var i = 0; i < alwaysActive.length; i++) {\n                menuButtons.enable(alwaysActive[i], true);\n            }\n            menuButtons.setExtracontent('user', options.username);\n            menuButtons.setTimeLeft(options);\n            updateMenu = function() {\n                var i;\n                var file = fileManager.currentFile();\n                var nfiles = fileManager.length();\n                if (nfiles) {\n                    tabs.show();\n                } else {\n                    tabs.hide();\n                }\n                if (fileManager.isFileListVisible()) {\n                    menuButtons.setText('filelist', 'filelistclose', VPLUtil.str('filelist'));\n                } else {\n                    menuButtons.setText('filelist', 'filelist', VPLUtil.str('filelist'));\n                }\n                var modified = fileManager.isModified();\n                menuButtons.enable('save', modified);\n                var running = VPLUI.monitorRunning();\n                if (running) {\n                    menuButtons.setText('run', 'running');\n                } else {\n                    menuButtons.setText('run', 'run');\n                }\n                menuButtons.enable('run', !running && (!modified || options.example) && isOptionAllowed('run'));\n                menuButtons.enable('debug', !running && (!modified || options.example) && isOptionAllowed('debug'));\n                menuButtons.enable('evaluate', !running && (!modified || options.example) && isOptionAllowed('evaluate'));\n                menuButtons.enable('download', !modified);\n                menuButtons.enable('new', nfiles < maxNumberOfFiles);\n                menuButtons.enable('sort', nfiles - minNumberOfFiles > 1);\n                menuButtons.enable('multidelete', nfiles - minNumberOfFiles > 1);\n                menuButtons.enable('theme', true);\n                var sel;\n                if (!file || nfiles === 0) {\n                    sel = ['rename', 'delete', 'undo', 'redo', 'select_all', 'find', 'find_replace', 'next'];\n                    for (i = 0; i < sel.length; i++) {\n                        menuButtons.enable(sel[i], false);\n                    }\n                    return;\n                }\n                menuButtons.enable('rename', file.getId() >= minNumberOfFiles && nfiles !== 0);\n                menuButtons.enable('delete', file.getId() >= minNumberOfFiles && nfiles !== 0);\n                menuButtons.enable('undo', file.hasUndo());\n                menuButtons.enable('redo', file.hasRedo());\n                menuButtons.enable('select_all', file.hasSelectAll());\n                menuButtons.enable('find', file.hasFind());\n                menuButtons.enable('find_replace', file.hasFindReplace());\n                menuButtons.enable('next', file.hasNext());\n                VPLUtil.delay('updateFileList', fileManager.updateFileList);\n            };\n\n            executionActions = {\n                'open': updateMenu,\n                'close': updateMenu,\n                'getConsole': function() {\n                    return lastConsole;\n                },\n                'setResult': self.setResult,\n                'ajaxurl': options.ajaxurl,\n                'run': function(content, coninfo, ws) {\n                    var parsed = /^([^:]*):?(.*)/.exec(content);\n                    var type = VPLUtil.sanitizeText(parsed[1]);\n                    if (type == 'terminal' || type == 'webterminal') {\n                        if (lastConsole && lastConsole.isOpen()) {\n                            lastConsole.close();\n                        }\n                        lastConsole = terminal;\n                        terminal.connect(coninfo.executionURL, function() {\n                            ws.close();\n                            focusCurrentFile();\n                        });\n                        if (type == 'webterminal') {\n                            var URLfavicon = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse;\n                            URLfavicon += \"/favicon.ico\";\n                            var imgFavicon = $('<img>');\n                            imgFavicon.attr('src', URLfavicon);\n                            imgFavicon.attr('style', 'display:none');\n                            $('body').append(imgFavicon);\n                        }\n                    } else if (type == 'vnc') {\n                        if (lastConsole && lastConsole.isOpen()) {\n                            lastConsole.close();\n                        }\n                        lastConsole = VNCClient;\n                        VNCClient.connect(coninfo.secure, coninfo.server, coninfo.portToUse, coninfo.VNCpassword,\n                                coninfo.executionPath, function() {\n                                    ws.close();\n                                    focusCurrentFile();\n                                });\n                    } else if (type == \"browser\") {\n                        var URL = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse + \"/\";\n                        URL += VPLUtil.sanitizeText(parsed[2]) + \"/httpPassthrough\";\n                        if (isTeacher) {\n                            URL += \"?private\";\n                        }\n                        var message = '<a href=\"' + URL + '\" target=\"_blank\">';\n                        message += VPLUtil.str('open') + '</a>';\n                        var options = {\n                            width: 200,\n                            icon: 'run',\n                            title: VPLUtil.str('run'),\n                        };\n                        showMessage(message, options);\n                    } else {\n                        VPLUtil.log(\"Type of run error \" + content, true);\n                    }\n                },\n                'lastAction': false,\n                'getLastAction': function() {\n                    var ret = this.lastAction;\n                    this.lastAction = false;\n                    return ret;\n                },\n                'setLastAction': function(action) {\n                    this.lastAction = action;\n                }\n            };\n\n            tabs.on(\"tabsactivate\", function() {\n                fileManager.currentFile('focus');\n                VPLUtil.delay('updateMenu', updateMenu);\n                VPLUtil.delay('autoResizeTab', autoResizeTab);\n            });\n\n            // VPLIDE resize view control.\n            var jw = $(window);\n            jw.on('resize', autoResizeTab);\n            // Save? before exit.\n            if (!options.example) {\n                jw.on('beforeunload', function() {\n                    if (fileManager.isModified()) {\n                        return str('changesNotSaved');\n                    }\n                    return undefined;\n                });\n            }\n            fileManager = new FileManager();\n\n            autoResizeTab();\n            // Checks menu width every 1 sec as it can change without event.\n            (function() {\n                var oldMenuWidth = menu.width();\n                /**\n                 * Checks menu width change\n                 */\n                function checkMenuWidth() {\n                    var newMenuWidth = menu.width();\n                    if (oldMenuWidth != newMenuWidth) {\n                        oldMenuWidth = newMenuWidth;\n                        autoResizeTab();\n                    }\n                }\n                checkMenuWidth();\n                setInterval(checkMenuWidth, 1000);\n            }());\n            fileManager.resetModified();\n            VPLUI.requestAction('load', 'loading', options, options.loadajaxurl)\n            .done(function(response) {\n                var allOK = true;\n                var files = response.files;\n                var showFileList = false;\n                for (var i = 0; i < files.length; i++) {\n                    var file = files[i];\n                    var r = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                    if (r) {\n                        r.resetModified();\n                        if (i < minNumberOfFiles || files.length <= 5) {\n                            fileManager.open(r);\n                        } else {\n                            showFileList = true;\n                        }\n                    } else {\n                        allOK = false;\n                    }\n                }\n                tabs.tabs('option', 'active', 0);\n\n                if (response.compilationexecution) {\n                    self.setResult(response.compilationexecution, false);\n                }\n                menuButtons.setTimeLeft(response);\n                if (response.comments > '') {\n                    $('#vpl_ide_input_comments').val(response.comments);\n                }\n                if (allOK) {\n                    fileManager.resetModified();\n                } else {\n                    fileManager.setModified();\n                }\n                if (fileManager.length() === 0 && maxNumberOfFiles > 0) {\n                    menuButtons.getAction('new')();\n                } else if (!options.saved) {\n                    fileManager.setModified();\n                }\n                fileManager.setFontSize(options.fontSize);\n                fileManager.setVersion(response.version);\n                fileManager.fileListVisible(showFileList);\n                VPLUtil.afterAll('AfterLoadFiles', function() {\n                    updateMenu();\n                    autoResizeTab();\n                    adjustTabsTitles(true);\n                });\n            })\n            .fail(showErrorMessage);\n        };\n        window.VPLIDE = VPLIDE;\n        return {\n            init: function(rootId, options) {\n                vplIdeInstance = new VPLIDE(rootId, options);\n            }\n        };\n    }\n);\n"],"names":["define","$","jqui","VPLUtil","VPLUI","VPLFile","VPLIDEButtons","VPLTerminal","VPLVNCClient","VPLIDE","vplIdeInstance","rootId","options","fileManager","adjustTabsTitles","autoResizeTab","showErrorMessage","updateMenu","executionActions","self","this","minNumberOfFiles","minfiles","maxNumberOfFiles","maxfiles","restrictedEdit","restrictededitor","example","readOnly","readOnlyFiles","isTeacher","fullScreen","scrollBarWidth","str","rootObj","append","Error","activateModification","optionsToCheck","new","rename","delete","save","run","edit","debug","evaluate","import","resetfiles","sort","multidelete","acetheme","console","comments","loadajaxurl","ajaxurl","isOptionAllowed","op","dragoverHandler","e","originalEvent","dataTransfer","dropEffect","preventDefault","dropHandler","stopImmediatePropagation","dt","files","length","readSelectedFiles","file","addFile","fileListVisibleIfNeeded","restrictedPaste","stopPropagation","fontSize","parseInt","on","menu","menuButtons","tr","fileListContainer","fileList","fileListContent","tabsUl","tabs","resultContainer","result","renameDiretoryAction","doNothing","vplMinWidth","updateEvaluationNumber","res","nevaluations","text","reductionbyevaluation","freeevaluations","setExtracontent","lastResult","getTerminal","terminal","setResultGrade","content","raw","titleclass","find","titleTag","replaceWith","setResultTab","name","contentclass","contentTag","HTMLcontent","contents","html","setResult","go","i","getFiles","fileNames","getFileName","clearAnnotations","hasContent","gradeShow","formated","show","grade","sanitizeText","variables","processResult","compilation","evaluation","execution","window","VPLDescription","MathJax","math","Hub","Queue","vplVisible","accordion","anot","getAnnotations","j","type","gotoFile","row","hide","delay","heightStyle","header","animate","beforeActivate","event","ui","newHeader","hasClass","width","gotoFileLink","currentTarget","addClass","iconFolder","tabsAir","getTabsAir","outerWidth","resizeTabWidth","maxWidth","diffLeft","position","left","originalPosition","resizable","vplOriginalWidth","diffWidth","size","originalSize","currentFile","resizableOptions","containment","resize","start","off","stop","handles","focusCurrentFile","center","newWidth","tabsUlWidth","last","children","parentScrollLeft","parent","scrollLeft","fileTab","getTabNameId","scroll","finish","index","oldWidth","planb","disable","css","right","rel","wfl","newHeight","outerHeight","offset","top","height","panelHeight","resizeHeight","dialogbaseOptions","extend","close","showMessage","message","dialogNew","newFileHandler","keyCode","dialog","val","encoding","newfile","open","getTabPos","getId","focus","dialogButtons","title","buttons","setDialogTitleIcon","dialogRename","renameHandler","renameFile","dialogRenameDirectory","renameDirectoryHandler","renameDirectory","target","hasAttribute","dirname","getAttribute","dialogComments","oldStudentComments","setModified","aboutDialog","OKButtons","shortcutDialog","getShortcuts","next","filter","button","dialogSort","dialogSortButtons","regNoNumber","sorted","newOrder","each","orig","id","replace","push","list","sortable","items","placeholder","item","removeClass","disableSelection","maxHeight","dialogMultidelete","dialogMultideleteButtons","prop","toDeleteList","label","data","deleteFile","updateFileList","dialogFontsize","fontsizeSlider","dialogFontFizeButtons","value","slider","setFontSize","ajax","async","url","JSON","stringify","contentType","dataType","getFontSize","min","max","change","dialogAceTheme","acethemeSelect","dialogAceThemeButtons","setTheme","setUserPreferences","aceTheme","modal","getTheme","VNCClient","lastConsole","fileSelect","resetFiles","requestAction","done","response","fileName","hasOwnProperty","fail","add","originalAction","fileListVisible","isFileListVisible","bindKey","win","mac","filename","ok","icon","closeFile","trigger","print","editorName","setText","scrollTop","username","setTimeout","location","download","noconfirmation","executionRequest","action","acting","isConnected","webSocketMonitor","runAction","XGEOMETRY","getCanvasSize","currentFileName","getCurrentFileName","debugAction","evaluateAction","getFilesToSave","version","getVersion","postMaxSize","doSave","requestsconfirmation","$checkbox","donotshowagain","question","yes","resetModified","setVersion","setTimeLeft","monitorRunning","processid","getProcessId","setLastAction","isOpen","toggleTimeLeft","tag","is","getHTML","rightPanelButton","launchAction","menuHtml","controlgroup","alwaysActive","enable","nfiles","modified","isModified","sel","running","hasUndo","hasRedo","hasSelectAll","hasFind","hasFindReplace","hasNext","getConsole","coninfo","ws","parsed","exec","connect","executionURL","URLfavicon","secure","server","portToUse","imgFavicon","attr","VNCpassword","executionPath","URL","log","lastAction","getLastAction","ret","jw","openFiles","fileNameIncluded","checkName","toLowerCase","nameMod","indexOf","twoBlockly","oldname","newname","isBlockly","v","generateFileList","fileNameExists","localClipboard","setClipboard","t","getClipboard","fileId","theme","addTab","fid","hlink","removeTab","remove","isReadOnly","pos","setGetkeys","hideIDEStatus","ptab","splice","getFilePosById","isClosed","b","showError","validPath","setContent","getUniqueId","extendToBinary","extendToBlockly","extendToCodeEditor","setFileName","isBinary","fileExtension","getContent","gotoFileName","directoryExists","dirName","startsWith","oldName","newName","oldNameLength","checkDirName","newFileNames","substr","oldNames","arguments","fun","args","Array","prototype","slice","shift","apply","currentPos","getFileTab","l","gotoLine","a","fname","fpos","line","getFile","getDirectoryStructure","structure","isDir","path","addFilePath","split","curdir","pathdir","p","part","lines","lister","dir","indent","fd","sname","attrs","dirline","iconModified","iconReadOnly","iconRequired","getAction","oldMenuWidth","checkMenuWidth","newMenuWidth","setInterval","allOK","showFileList","r","compilationexecution","saved","afterAll","init"],"mappings":"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"}