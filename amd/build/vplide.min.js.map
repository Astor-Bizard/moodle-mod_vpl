{"version":3,"file":"vplide.min.js","sources":["../src/vplide.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\n//\n// VPL for Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// VPL for Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * IDE Control\n *\n * @copyright 2017 Juan Carlos Rodríguez-del-Pino\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author Juan Carlos Rodríguez-del-Pino <jcrodriguez@dis.ulpgc.es>\n */\n\n/* globals MathJax */\n\ndefine(\n    [\n        'jquery',\n        'jqueryui',\n        'mod_vpl/vplutil',\n        'mod_vpl/vplui',\n        'mod_vpl/vplidefile',\n        'mod_vpl/vplidebutton',\n        'mod_vpl/vplterminal',\n        'mod_vpl/vplvnc',\n    ],\n    function($, jqui, VPLUtil, VPLUI, VPLFile, VPLIDEButtons, VPLTerminal, VPLVNCClient) {\n        if (typeof VPLIDE !== 'undefined') {\n            return VPLIDE;\n        }\n        var vplIdeInstance;\n        var VPLIDE = function(rootId, options) {\n            var self = this;\n            var fileManager;\n            var adjustTabsTitles;\n            var autoResizeTab;\n            var showErrorMessage;\n            var updateMenu;\n            var executionActions;\n            var minNumberOfFiles = options.minfiles || 0;\n            var maxNumberOfFiles = options.maxfiles || 0;\n            var restrictedEdit = options.restrictededitor || options.example;\n            var readOnly = options.example;\n            var readOnlyFiles = options.readOnlyFiles;\n            var isTeacher = options.isTeacher;\n            var fullScreen = false;\n            var scrollBarWidth = VPLUI.scrollBarWidth();\n            var str = VPLUtil.str;\n            var rootObj = $('#' + rootId);\n            $(\"head\").append('<meta name=\"viewport\" content=\"initial-scale=1\">')\n                          .append('<meta name=\"viewport\" width=\"device-width\">')\n                          .append('<link rel=\"stylesheet\" href=\"../editor/VPLIDE.css\"/>');\n            if (typeof rootObj != 'object') {\n                throw new Error(\"VPL: constructor tag_id not found\");\n            }\n            var optionsToCheck = {\n                'new': true,\n                'rename': true,\n                'delete': true,\n                'save': true,\n                'run': true,\n                'edit': true,\n                'debug': true,\n                'evaluate': true,\n                'import': true,\n                'resetfiles': true,\n                'sort': true,\n                'multidelete': true,\n                'acetheme': true,\n                'console': true,\n                'comments': true\n            };\n            if ((typeof options.loadajaxurl) == 'undefined') {\n                options.loadajaxurl = options.ajaxurl;\n            }\n            (function() {\n                var activateModification = (minNumberOfFiles < maxNumberOfFiles);\n                options.new = activateModification;\n                options.rename = activateModification;\n                options.delete = activateModification;\n                options.comments = options.comments && !options.example;\n                options.acetheme = true;\n            })();\n            options.sort = (maxNumberOfFiles - minNumberOfFiles >= 2);\n            options.multidelete = options.sort;\n            options.import = !restrictedEdit;\n            var isOptionAllowed = function(op) {\n                if (!optionsToCheck[op]) {\n                    return true;\n                }\n                return options[op];\n            };\n            options.console = isOptionAllowed('run') || isOptionAllowed('debug');\n            if ((typeof options.fontSize) == 'undefined') {\n                options.fontSize = 12;\n            }\n            options.fontSize = parseInt(options.fontSize);\n            /**\n             * Handler for dragover event.\n             * @param {object} e event.\n             */\n            function dragoverHandler(e) {\n                if (restrictedEdit) {\n                    e.originalEvent.dataTransfer.dropEffect = 'none';\n                } else {\n                    e.originalEvent.dataTransfer.dropEffect = 'copy';\n                }\n                e.preventDefault();\n            }\n            /**\n             * Handler for drop event.\n             * @param {object} e event.\n             * @returns {boolean}\n             */\n            function dropHandler(e) {\n                if (restrictedEdit) { // No drop allowed.\n                    e.stopImmediatePropagation();\n                    return false;\n                }\n                var dt = e.originalEvent.dataTransfer;\n                // Drop files.\n                if (dt.files.length > 0) {\n                    VPLUI.readSelectedFiles(dt.files, function(file) {\n                        return fileManager.addFile(file, true, updateMenu, showErrorMessage);\n                    },\n                    function() {\n                        fileManager.fileListVisibleIfNeeded();\n                    });\n                    e.stopImmediatePropagation();\n                    return false;\n                }\n                return false;\n            }\n            rootObj.on('drop', dropHandler);\n            rootObj.on('dragover', dragoverHandler);\n            /**\n             * Handler for paste limited by restrictedEdit var.\n             * @param {object} e event.\n             * @returns {boolean}\n             */\n            function restrictedPaste(e) {\n                if (restrictedEdit) {\n                    e.stopPropagation();\n                    return false;\n                }\n                return true;\n            }\n            // Init editor vars.\n            var menu = $('#vpl_menu');\n            var menuButtons = new VPLIDEButtons(menu, isOptionAllowed);\n            var tr = $('#vpl_tr');\n            var fileListContainer = $('#vpl_filelist');\n            var fileList = $('#vpl_filelist_header');\n            var fileListContent = $('#vpl_filelist_content');\n            var tabsUl = $('#vpl_tabs_ul');\n            var tabs = $('#vpl_tabs');\n            var resultContainer = $('#vpl_results');\n            var result = $('#vpl_results_accordion');\n            var renameDiretoryAction = VPLUtil.doNothing;\n            fileListContainer.vplMinWidth = 80;\n            resultContainer.vplMinWidth = 100;\n            /**\n             * Avoids selecting grade.\n             * @param {object} event Unuse.\n             * @param {object} ui UI origen.\n             * @returns {boolean}\n             */\n            function avoidSelectGrade(event, ui) {\n                if (\"newHeader\" in ui) {\n                    if (ui.newHeader.hasClass('vpl_ide_accordion_t_grade')) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            /**\n             * Constructor of FileManager objects\n             */\n            function FileManager() {\n                var tabsUl = $('#vpl_tabs_ul');\n                $('#vpl_tabs').tabs();\n                var tabs = $('#vpl_tabs').tabs(\"widget\");\n                var files = [];\n                var openFiles = [];\n                var modified = true;\n                var self = this;\n                (function() {\n                    var version;\n                    self.setVersion = function(v) {\n                       version = v;\n                    };\n                    self.getVersion = function() {\n                       return version;\n                    };\n                })();\n                this.updateFileList = function() {\n                    self.generateFileList();\n                };\n                this.fileNameExists = function(name) {\n                    var checkName = name.toLowerCase();\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getFileName().toLowerCase() == checkName) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                /**\n                 * Checks if name is included in current files names\n                 * @param {string} name Name of file\n                 * @returns {boolean} if found or not found\n                 */\n                function fileNameIncluded(name) {\n                    var checkName = name.toLowerCase() + '/';\n                    for (var i = 0; i < files.length; i++) {\n                        var nameMod = files[i].getFileName().toLowerCase() + '/';\n                        // Check for name as directory existent.\n                        if (nameMod.indexOf(checkName) === 0 || checkName.indexOf(nameMod) === 0) {\n                            return true;\n                        }\n                    }\n                    return false;\n                }\n                /**\n                 * Checks if changing file name results in two blovkly files\n                 * @param {string} oldname The old file name\n                 * @param {string} newname The new file name\n                 * @returns {boolean} if results two two blovkly files\n                 */\n                function twoBlockly(oldname, newname) {\n                    if (VPLUtil.isBlockly(oldname)) {\n                        return false;\n                    }\n                    if (VPLUtil.isBlockly(newname)) {\n                        for (var i = 0; i < files.length; i++) {\n                            if (VPLUtil.isBlockly(files[i].getFileName())) {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                }\n                this.restrictedPaste = restrictedPaste;\n                this.dropHandler = dropHandler;\n                this.dragoverHandler = dragoverHandler;\n                this.readOnly = readOnly;\n                this.readOnlyFiles = readOnlyFiles;\n                this.restrictedEdit = restrictedEdit;\n                this.adjustTabsTitles = adjustTabsTitles;\n                this.minNumberOfFiles = minNumberOfFiles;\n                this.scrollBarWidth = scrollBarWidth;\n                var localClipboard = \"\";\n                this.setClipboard = function(t) {\n                    localClipboard = t;\n                };\n                this.getClipboard = function() {\n                    return localClipboard;\n                };\n                this.getTabPos = function(fileId) {\n                    for (var i = 0; i < openFiles.length; i++) {\n                        if (openFiles[i].getId() == fileId) {\n                            return i;\n                        }\n                    }\n                    return openFiles.length;\n                };\n                this.getTheme = function() {\n                    return options.theme;\n                };\n                this.setTheme = function(theme) {\n                    options.theme = theme;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].setTheme(theme);\n                    }\n                };\n                this.addTab = function(fid) {\n                    var hlink = '<a href=\"#vpl_file' + fid + '\"></a>';\n                    tabsUl.append('<li id=\"vpl_tab_name' + fid + '\">' + hlink + '</li>');\n                    tabs.append('<div id=\"vpl_file' + fid + '\" class=\"vpl_ide_file\"></div>');\n                };\n                this.removeTab = function(fid) {\n                    tabsUl.find('#vpl_tab_name' + fid).remove();\n                    tabs.find('#vpl_file' + fid).remove();\n                };\n                this.isReadOnly = function(fileName) {\n                    return this.readOnly || this.readOnlyFiles.indexOf(fileName) != -1;\n                };\n                this.open = function(pos) {\n                    var file;\n                    if (typeof pos == 'object') {\n                        file = pos;\n                    } else {\n                        file = files[pos];\n                    }\n                    if (file.isOpen()) {\n                        return;\n                    }\n                    var fid = file.getId();\n                    self.addTab(fid);\n                    openFiles.push(file);\n                    menuButtons.setGetkeys(file.open());\n                    tabs.tabs('refresh');\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('updateMenu', updateMenu);\n                };\n                this.closeFile = function(file) {\n                    if (!file.isOpen()) {\n                        return;\n                    }\n                    var pos;\n                    var fid = file.getId();\n                    file.close();\n                    VPLUI.hideIDEStatus();\n                    self.removeTab(fid);\n                    var ptab = self.getTabPos(fid);\n                    openFiles.splice(ptab, 1);\n                    tabs.tabs('refresh');\n                    adjustTabsTitles(false);\n                    self.fileListVisible(true);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('adjustTabsTitles', adjustTabsTitles, false);\n                    if (openFiles.length == ptab) {\n                        ptab--;\n                    }\n                    if (ptab >= 0 && openFiles.length > ptab) {\n                        pos = self.getFilePosById(openFiles[ptab].getId());\n                        self.gotoFile(pos, 'c');\n                        return;\n                    }\n                };\n                this.isClosed = function(pos) {\n                    return !files[pos].isOpen();\n                };\n                this.fileListVisible = function(b) {\n                    if (b === fileListContainer.vplVisible) {\n                        return;\n                    }\n                    if (b) {\n                        VPLUtil.delay('fileListVisible', function() {\n                            fileListContainer.vplVisible = true;\n                            self.updateFileList();\n                            fileListContainer.show();\n                            autoResizeTab();\n                         });\n                    } else {\n                        VPLUtil.delay('fileListVisible', function() {\n                            fileListContainer.vplVisible = false;\n                            fileListContainer.hide();\n                            autoResizeTab();\n                         });\n                    }\n                };\n                this.isFileListVisible = function() {\n                    return fileListContainer.vplVisible;\n                };\n                this.fileListVisibleIfNeeded = function() {\n                    if (this.isFileListVisible()) {\n                        return;\n                    }\n                    for (var i = 0; i < files.length; i++) {\n                        if (!files[i].isOpen()) {\n                            this.fileListVisible(true);\n                            return;\n                        }\n                    }\n                };\n                this.setFontSize = function(size) {\n                    options.fontSize = size;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].setFontSize(size);\n                    }\n                    terminal.setFontSize(size);\n                };\n                this.getFontSize = function() {\n                    return options.fontSize;\n                };\n                this.addFile = function(file, replace, ok, showError) {\n                    if ((typeof file.name != 'string') || !VPLUtil.validPath(file.name)) {\n                        showError(str('incorrect_file_name') + '\\n(' + file.name + ')');\n                        return false;\n                    }\n                    if (replace !== true) {\n                        replace = false;\n                    }\n                    var pos = this.fileNameExists(file.name);\n                    if (pos != -1) {\n                        if (replace && !files[pos].isReadOnly()) {\n                            files[pos].setContent(file.contents);\n                            self.setModified();\n                            ok();\n                            VPLUtil.delay('updateFileList', self.updateFileList);\n                            return file;\n                        } else {\n                            showError(str('filenotadded', file.name));\n                            return false;\n                        }\n                    }\n                    if (fileNameIncluded(file.name) || twoBlockly('', file.name)) {\n                        showError(str('filenotadded', file.name));\n                        return false;\n                    }\n                    if (files.length >= maxNumberOfFiles) {\n                        showError(str('maxfilesexceeded') + '\\n(' + maxNumberOfFiles + ')');\n                        return false;\n                    }\n                    var fid = VPLUtil.getUniqueId();\n                    var newfile = new VPLFile(fid, file.name, file.contents, this, vplIdeInstance);\n                    if (file.encoding == 1) {\n                        newfile.extendToBinary();\n                    } else {\n                        if (VPLUtil.isBlockly(file.name)) {\n                            newfile.extendToBlockly();\n                        } else {\n                            newfile.extendToCodeEditor();\n                        }\n                    }\n                    newfile.setFileName(file.name);\n                    files.push(newfile);\n                    self.setModified();\n                    if (files.length > 5) {\n                        self.fileListVisible(true);\n                    }\n                    ok();\n                    return newfile;\n                };\n                this.renameFile = function(oldname, newname, showError) {\n                    var pos = this.fileNameExists(oldname);\n                    try {\n                        if (pos == -1) {\n                            throw new Error(\"Internal error: File name not found\");\n                        }\n                        if (files[pos].getId() < this.minNumberOfFiles) {\n                            throw new Error(\"Internal error: Renaming requested filename\");\n                        }\n                        if (files[pos].getFileName() == newname) {\n                            return true; // Equals name file.\n                        }\n                        if (!VPLUtil.validPath(newname) ||\n                               fileNameIncluded(newname) ||\n                               twoBlockly(oldname, newname)) {\n                            throw str('incorrect_file_name');\n                        }\n                        if (VPLUtil.isBinary(oldname) && VPLUtil.fileExtension(oldname) != VPLUtil.fileExtension(newname)) {\n                            throw str('incorrect_file_name');\n                        }\n                        if (VPLUtil.isBlockly(oldname) != VPLUtil.isBlockly(newname)) {\n                            if (files[pos].getContent() > '') {\n                                showMessage(str('delete_file_fq', oldname), {\n                                    ok: function() {\n                                        var file = {\n                                            name: newname,\n                                            contents: '',\n                                            encoding: 0\n                                        };\n                                        fileManager.deleteFile(oldname, showError);\n                                        var fileResult = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                                        if (fileResult) {\n                                            fileManager.gotoFileName(newname);\n                                        }\n                                    }\n                                });\n                            } else {\n                                var file = {\n                                    name: newname,\n                                    contents: '',\n                                    encoding: 0\n                                };\n                                fileManager.deleteFile(oldname, showError);\n                                var fileResult = fileManager.addFile(file, false, updateMenu, showError);\n                                if (fileResult) {\n                                    fileManager.gotoFileName(newname);\n                                }\n                            }\n                            return true;\n                        }\n                        files[pos].setFileName(newname);\n                    } catch (e) {\n                        showError(str('filenotrenamed', oldname) + '\\n' + e);\n                        return false;\n                    }\n                    self.setModified();\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.directoryExists = function(dirName) {\n                    var checkName = dirName.toLowerCase() + '/';\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getFileName().toLowerCase().startsWith(checkName)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n                this.renameDirectory = function(oldName, newName, showError) {\n                    if (oldName == newName) {\n                        return false;\n                    }\n                    try {\n                        if (!this.directoryExists(oldName)) {\n                            throw new Error(\"Trying to rename a directory that doesn't exist: \" + oldName);\n                        }\n                        if (!VPLUtil.validPath(newName + '/file.txt')) {\n                            throw str('incorrect_directory_name');\n                        }\n                        // Prepare new names\n                        var oldNameLength = oldName.length + 1;\n                        var checkDirName = oldName.toLowerCase() + '/';\n                        var newFileNames = [];\n                        var i;\n                        for (i = 0; i < files.length; i++) {\n                            var fileName = files[i].getFileName();\n                            if (fileName.toLowerCase().startsWith(checkDirName)) {\n                                if (files[i].getId() < this.minNumberOfFiles) { // Renaming required filename\n                                    throw str('incorrect_file_name');\n                                }\n                                newFileNames[i] = newName + '/' + fileName.substr(oldNameLength);\n                            }\n                        }\n                        if (this.directoryExists(newName)) { // Checks if the merge is possible (no repeated names)\n                            var oldNames = [];\n                            for (i = 0; i < files.length; i++) {\n                                oldNames[files[i].getFileName().toLowerCase()] = true;\n                            }\n                            for (i = 0; i < files.length; i++) {\n                                if (newFileNames[i] && oldNames[newFileNames[i].toLowerCase()]) {\n                                    throw str('incorrect_file_name');\n                                }\n                            }\n                        }\n                        // Set the new file names\n                        for (i = 0; i < newFileNames.length; i++) {\n                            if (newFileNames[i]) {\n                                files[i].setFileName(newFileNames[i]);\n                            }\n                        }\n                    } catch (e) {\n                        showError(str('directory_not_renamed', oldName) + '\\n' + e);\n                        return false;\n                    }\n                    self.setModified();\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.deleteFile = function(name, showError) {\n                    var pos = this.fileNameExists(name);\n                    if (pos == -1) {\n                        showError(str('filenotdeleted', name));\n                        return false;\n                    }\n                    if (files[pos].getId() < minNumberOfFiles) {\n                        showError(str('filenotdeleted', name));\n                        return false;\n                    }\n                    this.setModified();\n                    this.closeFile(files[pos]);\n                    files.splice(pos, 1);\n                    if (openFiles.length == 0) {\n                        VPLUI.hideIDEStatus();\n                    }\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.currentFile = function() {\n                    var id = tabs.tabs('option', 'active');\n                    if (id in openFiles) {\n                        var file = openFiles[id];\n                        if (arguments.length === 0) {\n                            return file;\n                        }\n                        var action = arguments[0];\n                        if (typeof file[action] === 'function') {\n                            var fun = file[action];\n                            var args = Array.prototype.slice(arguments);\n                            args.shift();\n                            return fun.apply(file, args);\n                        }\n                    }\n                    return false;\n                };\n                this.currentPos = function() {\n                    return tabs.tabs('option', 'active');\n                };\n                this.getFileTab = function(id) {\n                    for (var i = 0; i < openFiles.length; i++) {\n                        if (openFiles[i].getId() == id) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                this.getFilePosById = function(id) {\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getId() == id) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                this.gotoFile = function(pos, l) {\n                    var file = files[pos];\n                    self.open(file);\n                    tabs.tabs('option', 'active', self.getFileTab(file.getId()));\n                    if (l !== 'c') {\n                        file.gotoLine(parseInt(l, 10));\n                    }\n                    file.focus();\n                };\n                this.gotoFileLink = function(a) {\n                    var tag = $(a);\n                    var fname = tag.data('file');\n                    var fpos = -1;\n                    if (fname > '') {\n                        fpos = this.fileNameExists(fname);\n                    } else {\n                        fpos = self.getFilePosById(tag.data('fileid'));\n                    }\n                    if (fpos >= 0) {\n                        var line = tag.data('line');\n                        if (typeof line == 'undefined') {\n                            line = 'c';\n                        }\n                        self.gotoFile(fpos, line);\n                        return true;\n                    }\n                    return false;\n                };\n                this.gotoFileName = function(fname, line) {\n                    var fpos = this.fileNameExists(fname);\n                    if (fpos >= 0) {\n                        if (typeof line == 'undefined') {\n                            line = 'c';\n                        }\n                        self.gotoFile(fpos, line);\n                        return true;\n                    }\n                    return false;\n                };\n                this.getFilesToSave = function() {\n                    var ret = [];\n                    for (var i = 0; i < files.length; i++) {\n                        var file = {};\n                        file.name = files[i].getFileName();\n                        file.contents = files[i].getContent();\n                        file.encoding = files[i].isBinary() ? 1 : 0;\n                        ret.push(file);\n                    }\n                    return ret;\n                };\n                this.resetModified = function() {\n                    modified = false;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].resetModified();\n                    }\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                };\n                this.setModified = function() {\n                    modified = true;\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('updateMenu', updateMenu);\n                };\n                this.isModified = function() {\n                    return modified;\n                };\n                this.length = function() {\n                    return files.length;\n                };\n                this.clearAnnotations = function() {\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].clearAnnotations();\n                    }\n                };\n                this.getFile = function(i) {\n                    return files[i];\n                };\n                this.getFiles = function() {\n                    return files;\n                };\n                this.getDirectoryStructure = function() {\n                    var structure = {\n                        isDir: true,\n                        content: {}\n                    };\n                    /**\n                     * Adds a new file the structure of directories\n                     * @param {int} i Index of file to add in the file array\n                     */\n                    function addFilePath(i) {\n                        var file = files[i];\n                        var fileName = file.getFileName();\n                        var path = fileName.split(\"/\");\n                        var curdir = structure;\n                        for (var p in path) {\n                            if (path.hasOwnProperty(p)) {\n                                var part = path[p];\n                                if (p == path.length - 1) { // File.\n                                    curdir.content[part] = {\n                                        isDir: false,\n                                        content: file,\n                                        pos: i\n                                    };\n                                } else {\n                                    if (!curdir.content[part]) { // New dir.\n                                        curdir.content[part] = {\n                                            isDir: true,\n                                            content: {}\n                                        };\n                                    }\n                                    // Descend Dir.\n                                    curdir = curdir.content[part];\n                                }\n                            }\n                        }\n                    }\n                    for (var i in files) {\n                        if (files.hasOwnProperty(i)) {\n                            addFilePath(i);\n                        }\n                    }\n                    return structure;\n                };\n                this.generateFileList = function() {\n                    if (!self.isFileListVisible()) {\n                        return;\n                    }\n                    var dirIndent = '<span class=\"vpl_ide_dirindent\"></span>';\n                    /**\n                     * Generates an array of string with the HTML code to represent the list of IDE files\n                     * @param {Object} dir Current directory\n                     * @param {int} indent Html code to indent subdirectories\n                     * @param {Array} lines Output. Each line contains the HTML to represent an IDE file\n                     */\n                    function lister(dir, indent, lines) {\n                        var name, fd, sname, attrs, dirline, file, path, line;\n                        for (name in dir.content) {\n                            if (dir.content.hasOwnProperty(name)) {\n                                fd = dir.content[name];\n                                if (fd.isDir) {\n                                    sname = VPLUtil.sanitizeText(name);\n                                    attrs = 'href=\"#\" data-dirname=\"' + sname + '\" ';\n                                    dirline = indent;\n                                    dirline += '<a ' + attrs + '>' + VPLUI.iconFolder() + sname + '</a>';\n                                    lines.push(dirline);\n                                    lister(fd, indent + dirIndent, lines);\n                                } else {\n                                    file = fd.content;\n                                    sname = VPLUtil.sanitizeText(name);\n                                    path = VPLUtil.sanitizeText(file.getFileName());\n                                    if (file.isOpen()) {\n                                        sname = '<b>' + sname + '</b>';\n                                    }\n                                    attrs = 'href=\"#\" data-fileid=\"' + file.getId() + '\" title=\"' + path + '\"';\n                                    line = '<a ' + attrs + '>' + sname + '</a>';\n                                    if (file.isModified()) {\n                                        line = VPLUI.iconModified() + line;\n                                    }\n                                    if (file.isReadOnly()) {\n                                        line = line + VPLUI.iconReadOnly();\n                                    } else if (file.getId() < minNumberOfFiles) {\n                                        line = line + VPLUI.iconRequired();\n                                    }\n                                    lines.push(indent + line);\n                                }\n                            }\n                        }\n                    }\n\n                    var structure = self.getDirectoryStructure();\n                    var lines = [];\n                    var html = '';\n                    lister(structure, '', lines);\n                    for (var i = 0; i < lines.length; i++) {\n                        html += lines[i] + '<br>';\n                    }\n                    fileListContent.html('<div>' + html + '</div>');\n                };\n                tabsUl.on('click', 'span.vpl_ide_closeicon', function() {\n                    fileManager.closeFile(fileManager.currentFile());\n                });\n                tabsUl.on('dblclick', 'span.vpl_ide_closeicon', menuButtons.getAction('delete'));\n                tabsUl.on('dblclick', 'a', menuButtons.getAction('rename'));\n                fileListContent.on('dblclick', 'a[data-fileid]', menuButtons.getAction('rename'));\n                fileListContent.on('dblclick', 'a[data-dirname]', renameDiretoryAction);\n            }\n            this.updateEvaluationNumber = function(res) {\n                if (typeof res.nevaluations != 'undefined') {\n                    var text = res.nevaluations;\n                    if (typeof res.reductionbyevaluation != 'undefined'\n                         && res.reductionbyevaluation > ''\n                         && res.reductionbyevaluation != 0) {\n                        if (res.freeevaluations != 0) {\n                            text = text + '/' + res.freeevaluations;\n                        }\n                        text = text + ' -' + res.reductionbyevaluation;\n                    }\n                    menuButtons.setExtracontent('evaluate', text);\n                }\n            };\n            this.lastResult = null;\n            this.getTerminal = function() {\n                return terminal;\n            };\n            this.setResultGrade = function(content, raw) {\n                var name = 'grade';\n                var titleclass = 'vpl_ide_accordion_t_' + name;\n                var contentclass = 'vpl_ide_accordion_c_' + name;\n                if (result.find('.' + contentclass).length == 0) {\n                    result.append('<div class=\"' + titleclass + '\"></div>');\n                    result.append('<div class=\"' + contentclass + '\"></div>');\n                }\n                if (typeof raw == 'undefined') {\n                    return result.find('h4.' + titleclass).length > 0;\n                }\n                var titleTag = result.find('.' + titleclass);\n                if (content > '') {\n                    titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + content + '</h4>');\n                    return true;\n                } else {\n                    titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\n                    return false;\n                }\n            };\n            this.setResultTab = function(name, content, raw) {\n                var titleclass = 'vpl_ide_accordion_t_' + name;\n                var contentclass = 'vpl_ide_accordion_c_' + name;\n                if (result.find('.' + contentclass).length == 0) {\n                    result.append('<div class=\"' + titleclass + '\"></div>');\n                    result.append('<div class=\"' + contentclass + '\"></div>');\n                }\n                if (typeof raw == 'undefined') {\n                    return result.find('h4.' + titleclass).length > 0;\n                }\n                var titleTag = result.find('.' + titleclass);\n                var contentTag = result.find('.' + contentclass);\n                var HTMLcontent = $('<div>' + content + '</div>');\n                HTMLcontent.find('h4').replaceWith(function() {\n                    return $(\"<h5>\").append($(this).contents());\n                });\n                if (contentTag.html() == HTMLcontent.html()) {\n                    return content > '';\n                }\n                if (content > '') {\n                    titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + str(name) + '</h4>');\n                    contentTag.replaceWith('<div class=\"ui-widget ' + contentclass + '\">' + HTMLcontent.html() + '</div>');\n                    return true;\n                } else {\n                    titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\n                    contentTag.replaceWith('<div class=\"' + contentclass + '\"></div>');\n                    return false;\n                }\n            };\n            this.setResult = function(res, go) {\n                self.updateEvaluationNumber(res);\n                var files = fileManager.getFiles();\n                var fileNames = [];\n                var i;\n                for (i = 0; i < files.length; i++) {\n                    fileNames[i] = files[i].getFileName();\n                    files[i].clearAnnotations();\n                }\n                var show = false;\n                var hasContent;\n                var grade = VPLUtil.sanitizeText(res.grade);\n                var gradeShow;\n                var formated;\n                gradeShow = self.setResultGrade(grade, res.grade);\n                show = show || gradeShow;\n                hasContent = self.setResultTab('variables', res.variables, res.variables);\n                show = show || hasContent;\n                formated = VPLUtil.processResult(res.compilation, fileNames, files, true, false);\n                hasContent = self.setResultTab('compilation', formated, res.compilation);\n                show = show || hasContent;\n                formated = VPLUtil.processResult(res.evaluation, fileNames, files, false, false);\n                hasContent = self.setResultTab('comments', formated, res.evaluation);\n                show = show || hasContent;\n                formated = VPLUtil.sanitizeText(res.execution);\n                hasContent = self.setResultTab('execution', formated, res.execution);\n                show = show || hasContent;\n                hasContent = self.setResultTab('description', window.VPLDescription, window.VPLDescription);\n                if (hasContent && typeof MathJax == 'object') { // MathJax workaround.\n                    var math = result.find(\".vpl_ide_accordion_c_description\")[0];\n                    MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, math]);\n                }\n                show = show || hasContent;\n                if (show) {\n                    resultContainer.show();\n                    resultContainer.vplVisible = true;\n                    result.accordion(\"refresh\");\n                    result.accordion('option', 'active', gradeShow ? 1 : 0);\n                    for (i = 0; i < files.length; i++) {\n                        var anot = files[i].getAnnotations();\n                        for (var j = 0; j < anot.length; j++) {\n                            if (go || anot[j].type == 'error') {\n                                fileManager.gotoFile(i, anot[j].row + 1);\n                                break;\n                            }\n                        }\n                    }\n                    $('#vpl_ide_shrightpanel').show();\n                } else {\n                    resultContainer.hide();\n                    resultContainer.vplVisible = false;\n                    $('#vpl_ide_shrightpanel').hide();\n                }\n                VPLUtil.delay('autoResizeTab', autoResizeTab);\n            };\n\n            result.accordion({\n                heightStyle: 'fill',\n                header: 'h4',\n                animate: false,\n                beforeActivate: avoidSelectGrade,\n            });\n            resultContainer.width(2 * resultContainer.vplMinWidth);\n            result.on('click', 'a', function(event) {\n                if (fileManager.gotoFileLink(event.currentTarget)) {\n                    event.preventDefault();\n                }\n            });\n            resultContainer.vplVisible = false;\n            resultContainer.hide();\n\n            fileListContainer.addClass('ui-tabs ui-widget ui-widget-content ui-corner-all');\n            fileList.text(str('filelist'));\n            fileList.html(VPLUI.iconFolder() + fileList.html());\n            fileList.addClass(\"ui-widget-header ui-button-text-only ui-corner-all\");\n            fileListContent.addClass(\"ui-widget ui-corner-all\");\n            fileListContainer.width(2 * fileListContainer.vplMinWidth);\n            fileListContainer.on('click', 'a', function(event) {\n                event.preventDefault();\n                fileManager.gotoFileLink(event.currentTarget);\n            });\n            fileListContainer.vplVisible = false;\n            fileListContainer.hide();\n            var tabsAir = false;\n            /**\n             * Returns separation space\n             * @returns {int} size in pixels\n             */\n            function getTabsAir() {\n                if (tabsAir === false) {\n                    tabsAir = (tabs.outerWidth(true) - tabs.width()) / 2;\n                }\n                return tabsAir;\n            }\n            /**\n             * Resize tab width\n             * @param {Event} e Unused\n             * @param {Object} ui UI object\n             */\n            function resizeTabWidth(e, ui) {\n                var diffLeft = ui.position.left - ui.originalPosition.left;\n                var maxWidth;\n                if (diffLeft !== 0) {\n                    maxWidth = tabs.width() + fileListContainer.width() - fileListContainer.vplMinWidth;\n                    tabs.resizable('option', 'maxWidth', maxWidth);\n                    fileListContainer.width(fileListContainer.vplOriginalWidth + diffLeft);\n                } else {\n                    maxWidth = tabs.width() + resultContainer.width() - resultContainer.vplMinWidth;\n                    tabs.resizable('option', 'maxWidth', maxWidth);\n                    var diffWidth = ui.size.width - ui.originalSize.width;\n                    resultContainer.width(resultContainer.vplOriginalWidth - diffWidth);\n                }\n                fileManager.currentFile('adjustSize');\n            }\n            var resizableOptions = {\n                containment: 'parent',\n                resize: resizeTabWidth,\n                start: function() {\n                    $(window).off('resize', autoResizeTab);\n                    tabs.resizable('option', 'minWidth', 100);\n                    if (resultContainer.vplVisible) {\n                        resultContainer.vplOriginalWidth = resultContainer.width();\n                    }\n                    if (fileListContainer.vplVisible) {\n                        fileListContainer.vplOriginalWidth = fileListContainer.width();\n                    }\n                },\n                stop: function(e, ui) {\n                    resizeTabWidth(e, ui);\n                    tabs.resizable('option', 'maxWidth', 100000);\n                    tabs.resizable('option', 'minWidth', 0);\n                    autoResizeTab();\n                    $(window).on('resize', autoResizeTab);\n                },\n                handles: \"\"\n            };\n            tabs.resizable(resizableOptions);\n             /**\n              * Updates handles for internal IDE resize\n              */\n            function updateTabsHandles() {\n                var handles = ['e', 'w', 'e', 'e, w'];\n                var index = 0;\n                index += fileListContainer.vplVisible ? 1 : 0;\n                index += resultContainer.vplVisible ? 2 : 0;\n                tabs.resizable('destroy');\n                resizableOptions.handles = handles[index];\n                resizableOptions.disable = index === 0;\n                tabs.resizable(resizableOptions);\n            }\n            /**\n             * Resize the IDE height\n             */\n            function resizeHeight() {\n                var newHeight = $(window).outerHeight();\n                newHeight -= menu.offset().top + menu.height() + (fullScreen ? getTabsAir() : 20);\n                if (newHeight < 150) {\n                    newHeight = 150;\n                }\n                tr.height(newHeight);\n                var panelHeight = newHeight - 3 * getTabsAir();\n                tabs.height(panelHeight);\n                if (resultContainer.vplVisible) {\n                    resultContainer.height(panelHeight + getTabsAir());\n                    result.accordion('refresh');\n                }\n                if (fileListContainer.vplVisible) {\n                    fileListContent.height(panelHeight - (fileList.outerHeight() + getTabsAir()));\n                    fileListContainer.height(panelHeight);\n                }\n            }\n            adjustTabsTitles = function(center) {\n                var newWidth = tabs.width();\n                var tabsUlWidth = 0;\n                tabsUl.width(100000);\n                var last = tabsUl.children('li:visible').last();\n                if (last.length) {\n                    var parentScrollLeft = tabsUl.parent().scrollLeft();\n                    tabsUlWidth = parentScrollLeft + last.position().left + last.width() + tabsAir;\n                    tabsUl.width(tabsUlWidth);\n                    var file = fileManager.currentFile();\n                    if (file && center) {\n                        var fileTab = $(file.getTabNameId());\n                        var scroll = parentScrollLeft + fileTab.position().left;\n                        scroll -= (newWidth - fileTab.outerWidth()) / 2;\n                        if (scroll < 0) {\n                            scroll = 0;\n                        }\n                        tabsUl.parent().finish().animate({\n                            scrollLeft: scroll\n                        }, 'slow');\n                    }\n                }\n                if (tabsUlWidth < newWidth) {\n                    tabsUl.width('');\n                }\n            };\n            autoResizeTab = function() {\n                var oldWidth = tabs.width();\n                var newWidth = menu.width();\n                var planb = false;\n                updateTabsHandles();\n                tr.width(menu.outerWidth());\n                if (fileListContainer.vplVisible) {\n                    var left = fileListContainer.outerWidth() + tabsAir;\n                    oldWidth += left;\n                    if (left >= 100) {\n                        newWidth -= left;\n                        tabs.css('left', left);\n                    } else {\n                        planb = true;\n                    }\n                } else {\n                    tabs.css('left', 0);\n                }\n                if (resultContainer.vplVisible) {\n                    var right = resultContainer.outerWidth() + tabsAir;\n                    oldWidth += right;\n                    newWidth -= right;\n                    if (newWidth < 100) {\n                        planb = true;\n                    }\n                }\n                if (planb) {\n                    var rel = menu.width() / oldWidth;\n                    var wfl = 0;\n                    if (fileListContainer.vplVisible) {\n                        wfl = fileListContainer.width() * rel;\n                        fileListContainer.width(wfl - tabsAir);\n                        wfl += tabsAir;\n                        tabs.css('left', wfl);\n                    }\n                    tabs.width(tabs.width() * rel);\n                    if (resultContainer.vplVisible) {\n                        resultContainer.width(menu.width() - (wfl + tabs.width() + tabsAir));\n                    }\n                } else {\n                    tabs.width(newWidth);\n                }\n                adjustTabsTitles(true);\n                resizeHeight();\n                fileManager.currentFile('adjustSize');\n            };\n            /**\n             * Transfer focus to current file\n             */\n            function focusCurrentFile() {\n                fileManager.currentFile('focus');\n            }\n            var dialogbaseOptions = $.extend({}, {\n                close: focusCurrentFile\n            }, VPLUI.dialogbaseOptions);\n            /**\n             * Shows a dialog with a message.\n             * @param {string} message\n             * @param {Object} options icon, title, actions handler (ok, yes, no, close)\n             * @returns {JQuery} JQueryUI Dialog object already open\n             */\n            function showMessage(message, options) {\n                return VPLUI.showMessage(message, $.extend({}, dialogbaseOptions, options));\n            }\n            showErrorMessage = function(message) {\n                return VPLUI.showErrorMessage(message, {\n                    close: focusCurrentFile\n                });\n            };\n\n            var dialogNew = $('#vpl_ide_dialog_new');\n            /**\n             * The event handler for the new file action\n             * @param {Object} event\n             * @return {boolean}\n             */\n            function newFileHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return true;\n                }\n                dialogNew.dialog('close');\n                var file = {\n                    name: $('#vpl_ide_input_newfilename').val(),\n                    contents: '',\n                    encoding: 0\n                };\n                var newfile = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                if (newfile) {\n                    fileManager.open(newfile);\n                    tabs.tabs('option', 'active', fileManager.getTabPos(newfile.getId()));\n                    newfile.focus();\n                    return true;\n                }\n                return false;\n            }\n\n            var dialogButtons = {};\n            dialogButtons[str('ok')] = newFileHandler;\n            dialogButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogNew.find('input').on('keypress', newFileHandler);\n            dialogNew.dialog($.extend({}, dialogbaseOptions, {\n                title: str('create_new_file'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogNew, 'new');\n\n            var dialogRename = $('#vpl_ide_dialog_rename');\n            /**\n             * The event handler for the rename current file action\n             * @param {Object} event\n             */\n            function renameHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return;\n                }\n                dialogRename.dialog('close');\n                fileManager.renameFile(fileManager.currentFile('getFileName'),\n                        $('#vpl_ide_input_renamefilename').val(), showErrorMessage);\n                event.preventDefault();\n            }\n            dialogRename.find('input').on('keypress', renameHandler);\n            dialogButtons[str('ok')] = renameHandler;\n            dialogRename.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    $('#vpl_ide_input_renamefilename').val(fileManager.currentFile('getFileName'));\n                },\n                title: str('rename_file'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogRename, 'rename');\n\n            var dialogRenameDirectory = $('#vpl_ide_dialog_renamedir');\n            /**\n             * The event handler for rename a directory\n             * @param {Object} event\n             */\n            function renameDirectoryHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return;\n                }\n                dialogRenameDirectory.dialog('close');\n                fileManager.renameDirectory($('#vpl_ide_input_olddirectoryname').val(),\n                        $('#vpl_ide_input_renamedirectory').val(), showErrorMessage);\n                event.preventDefault();\n            }\n            dialogRenameDirectory.find('input').on('keypress', renameDirectoryHandler);\n            dialogButtons[str('ok')] = renameDirectoryHandler;\n            dialogRenameDirectory.dialog($.extend({}, dialogbaseOptions, {\n                title: str('rename_directory'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogRenameDirectory, 'filelist');\n            renameDiretoryAction = function(event) {\n                var dirname = event.target.getAttribute('data-dirname');\n                $('#vpl_ide_input_olddirectoryname').val(dirname);\n                $('#vpl_ide_input_renamedirectory').val(dirname);\n                dialogRenameDirectory.dialog('open');\n            };\n            var dialogComments = $('#vpl_ide_dialog_comments');\n            var oldStudentComments = '';\n            dialogButtons[str('ok')] = function() {\n                if (oldStudentComments != $('#vpl_ide_input_comments').val()) {\n                    fileManager.setModified();\n                }\n                $(this).dialog('close');\n            };\n            dialogComments.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    oldStudentComments = $('#vpl_ide_input_comments').val();\n                },\n                title: str('comments'),\n                width: '40em',\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogComments, 'comments');\n\n            $('#vpl_ide_input_comments').width('30em');\n            var aboutDialog = $('#vpl_ide_dialog_about');\n            var OKButtons = {};\n            OKButtons[str('ok')] = function() {\n                $(this).dialog('close');\n            };\n            var shortcutDialog = $('#vpl_ide_dialog_shortcuts');\n            shortcutDialog.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\n                    $('#vpl_ide_dialog_shortcuts').html(html);\n                },\n                title: str('shortcuts'),\n                width: 400,\n                height: 300,\n                buttons: OKButtons\n            }));\n            shortcutDialog.dialog('option', 'height', 300);\n            VPLUI.setDialogTitleIcon(shortcutDialog, 'shortcuts');\n\n            OKButtons[str('shortcuts')] = function() {\n                $(this).dialog('close');\n                shortcutDialog.dialog('open');\n            };\n            aboutDialog.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\n                    aboutDialog.next().find(\"button\").filter(\n                        function() {\n                            return $(this).text() == str('shortcuts');\n                        }\n                  ).button(html != '' ? 'enable' : 'disable');\n                },\n                title: str('about'),\n                width: 400,\n                height: 300,\n                buttons: OKButtons\n            }));\n            aboutDialog.dialog('option', 'height', 300);\n            VPLUI.setDialogTitleIcon(aboutDialog, 'about');\n\n            var dialogSort = $('#vpl_ide_dialog_sort');\n            var dialogSortButtons = {};\n            dialogSortButtons[str('ok')] = function() {\n                var files = fileManager.getFiles();\n                var regNoNumber = /[^\\d]*/;\n                var sorted = [];\n                var i = 0;\n                var newOrder = $('#vpl_sort_list li');\n                if (newOrder.length != files.length) {\n                    return;\n                }\n                newOrder.each(function() {\n                    var orig = parseInt(this.id.replace(regNoNumber, ''));\n                    sorted.push(files[orig]);\n                });\n                for (i = 0; i < newOrder.length; i++) {\n                    files[i] = sorted[i];\n                }\n                fileManager.setModified();\n                $(this).dialog('close');\n            };\n            dialogSortButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogSort.dialog($.extend({}, dialogbaseOptions, {\n                title: str('sort'),\n                buttons: dialogSortButtons,\n                open: function() {\n                    var list = $('#vpl_sort_list');\n                    list.html('');\n                    var files = fileManager.getFiles();\n                    for (var i = 0; i < files.length; i++) {\n                        var file = $('<li id=\"vpl_fsort_' + i + '\"class=\"ui-widget-content\"></li>');\n                        if (files[i].getId() < minNumberOfFiles) {\n                            file.addClass('ui-state-disabled');\n                        }\n                        file.text((i + 1) + '-' + files[i].getFileName());\n                        list.append(file);\n                    }\n                    list.sortable({\n                        items: \"li:not(.ui-state-disabled)\",\n                        placeholder: \"ui-state-highlight\",\n                        start: function(event, ui) {\n                            ui.item.addClass('ui-state-highlight');\n                        },\n                        stop: function(event, ui) {\n                            ui.item.removeClass('ui-state-highlight');\n                        },\n                    });\n                    list.disableSelection();\n                },\n                maxHeight: 400\n            }));\n            VPLUI.setDialogTitleIcon(dialogSort, 'sort');\n\n            var dialogMultidelete = $('#vpl_ide_dialog_multidelete');\n            var dialogMultideleteButtons = {};\n            dialogMultideleteButtons[str('selectall')] = function() {\n                $(this).find('input').prop(\"checked\", true);\n            };\n            dialogMultideleteButtons[str('deselectall')] = function() {\n                $(this).find('input').prop(\"checked\", false);\n            };\n            dialogMultideleteButtons[str('deleteselected')] = function() {\n                var files = fileManager.getFiles();\n                var toDeleteList = [];\n                var labelList = $('#vpl_multidelete_list label');\n                labelList.each(function() {\n                    var label = $(this);\n                    if (label.find('input').prop('checked')) {\n                        var id = label.data('fileid');\n                        toDeleteList.push(files[id].getFileName());\n                    }\n                });\n                for (var i = 0; i < toDeleteList.length; i++) {\n                    fileManager.deleteFile(toDeleteList[i], showErrorMessage);\n                }\n                VPLUtil.delay('updateMenu', updateMenu);\n                VPLUtil.delay('updateFileList', fileManager.updateFileList);\n                $(this).dialog('close');\n            };\n            dialogMultideleteButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogMultidelete.dialog($.extend({}, dialogbaseOptions, {\n                title: str('multidelete'),\n                buttons: dialogMultideleteButtons,\n                open: function() {\n                    var list = $('#vpl_multidelete_list');\n                    list.html('');\n                    var files = fileManager.getFiles();\n                    for (var i = minNumberOfFiles; i < files.length; i++) {\n                        var name = VPLUtil.sanitizeText(files[i].getFileName());\n                        var file = $('<label><input type=\"checkbox\"> ' + name + '</label>');\n                        file.data('fileid', i);\n                        list.append(file);\n                        list.append('<br>');\n                    }\n                    list.find('label').button();\n                },\n                maxHeight: 400,\n                maxWidth: 400\n            }));\n            VPLUI.setDialogTitleIcon(dialogMultidelete, 'multidelete');\n\n            var dialogFontsize = $('#vpl_ide_dialog_fontsize');\n            var fontsizeSlider = $('#vpl_ide_dialog_fontsize .vpl_fontsize_slider');\n            var dialogFontFizeButtons = {};\n            dialogFontFizeButtons[str('ok')] = function() {\n                var value = fontsizeSlider.slider(\"value\");\n                fileManager.setFontSize(value);\n                $(this).dialog('close');\n                $.ajax({\n                    async: true,\n                    type: \"POST\",\n                    url: '../editor/userpreferences.json.php',\n                    'data': JSON.stringify({fontSize: value}),\n                    contentType: \"application/json; charset=utf-8\",\n                    dataType: \"json\"\n                });\n            };\n            dialogFontFizeButtons[str('cancel')] = function() {\n                fileManager.setFontSize(fontsizeSlider.data(\"vpl_fontsize\"));\n                $(this).dialog('close');\n            };\n            dialogFontFizeButtons[str('reset')] = function() {\n                fontsizeSlider.slider('value', 12);\n            };\n            dialogFontsize.dialog($.extend({}, dialogbaseOptions, {\n                title: str('fontsize'),\n                buttons: dialogFontFizeButtons,\n                open: function() {\n                    fontsizeSlider.data(\"vpl_fontsize\", fileManager.getFontSize());\n                    fontsizeSlider.slider('value', fileManager.getFontSize());\n                },\n            }));\n            fontsizeSlider.slider({\n                min: 1,\n                max: 48,\n                change: function() {\n                    var value = fontsizeSlider.slider(\"value\");\n                    fileManager.setFontSize(value);\n                    dialogFontsize.find('.vpl_fontsize_slider_value').text(value);\n                }\n            });\n            VPLUI.setDialogTitleIcon(dialogFontsize, 'fontsize');\n\n            var dialogAceTheme = $('#vpl_ide_dialog_acetheme');\n            var acethemeSelect = $('#vpl_ide_dialog_acetheme select');\n            var dialogAceThemeButtons = {};\n            dialogAceThemeButtons[str('ok')] = function() {\n                fileManager.setTheme(acethemeSelect.val());\n                $(this).dialog('close');\n                VPLUtil.setUserPreferences({aceTheme: acethemeSelect.val()});\n            };\n            dialogAceThemeButtons[str('cancel')] = function() {\n                fileManager.setTheme(acethemeSelect.data(\"acetheme\"));\n                $(this).dialog('close');\n            };\n            dialogAceThemeButtons[str('reset')] = function() {\n                acethemeSelect.val(acethemeSelect.data(\"acetheme\"));\n                fileManager.setTheme(acethemeSelect.val());\n            };\n            dialogAceTheme.dialog($.extend({}, dialogbaseOptions, {\n                title: str('theme'),\n                buttons: dialogAceThemeButtons,\n                modal: false,\n                open: function() {\n                    acethemeSelect.data(\"acetheme\", fileManager.getTheme());\n                    acethemeSelect.val(fileManager.getTheme());\n                },\n            }));\n            acethemeSelect.on('change', function() {\n                    fileManager.setTheme(acethemeSelect.val());\n            });\n            VPLUI.setDialogTitleIcon(dialogAceTheme, 'theme');\n\n            var terminal = new VPLTerminal('vpl_dialog_terminal', 'vpl_terminal', str);\n            var VNCClient = new VPLVNCClient('vpl_dialog_vnc', str);\n            var lastConsole = terminal;\n            var fileSelect = $('#vpl_ide_input_file');\n            var fileSelectHandler = function() {\n                VPLUI.readSelectedFiles(this.files, function(file) {\n                    return fileManager.addFile(file, true, updateMenu, showErrorMessage);\n                },\n                function() {\n                    fileManager.fileListVisibleIfNeeded();\n                });\n            };\n            fileSelect.on('change', fileSelectHandler);\n            // Menu acctions.\n            menuButtons.add({\n                name: 'filelist',\n                originalAction: function() {\n                    fileManager.fileListVisible(!fileManager.isFileListVisible());\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                    VPLUtil.delay('updateFileList', fileManager.updateFileList);\n                },\n                bindKey: {\n                    win: 'Ctrl-L',\n                    mac: 'Ctrl-L'\n                }\n            });\n\n            menuButtons.add({\n                name: 'new',\n                originalAction: function() {\n                    if (fileManager.length() < maxNumberOfFiles) {\n                        dialogNew.dialog('open');\n                    }\n                },\n                bindKey: {\n                    win: 'Alt-N',\n                    mac: 'Option-N'\n                }\n            });\n            menuButtons.add({\n                name: 'rename',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (file && file.getId() >= minNumberOfFiles) {\n                        dialogRename.dialog('open');\n                    }\n                },\n                bindKey: {\n                    win: 'Ctrl-R',\n                    mac: 'Ctrl-R'\n                }\n            });\n            menuButtons.add({\n                name: 'delete',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (!file) {\n                        return;\n                    }\n                    var filename = file.getFileName();\n                    var message = str('delete_file_fq', filename);\n                    showMessage(message, {\n                        ok: function() {\n                            fileManager.deleteFile(filename, showErrorMessage);\n                        },\n                        title: str('delete_file_q'),\n                        icon: 'trash'\n                    });\n                },\n                bindKey: {\n                    win: 'Ctrl-D',\n                    mac: 'Ctrl-D'\n                }\n            });\n            menuButtons.add({\n                name: 'close',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (!file) {\n                        return;\n                    }\n                    fileManager.closeFile(file);\n                },\n                bindKey: {\n                    win: 'Alt-W',\n                    mac: 'Option-W'\n                }\n            });\n            menuButtons.add({\n                name: 'import',\n                originalAction: function() {\n                    fileSelect.val('');\n                    fileSelect.trigger('click');\n                },\n                bindKey: {\n                    win: 'Ctrl-I',\n                    mac: 'Ctrl-I'\n                }\n            });\n            menuButtons.add({\n                name: 'sort',\n                originalAction: function() {\n                    dialogSort.dialog('open');\n                },\n                bindKey: {\n                    win: 'Ctrl-O',\n                    mac: 'Ctrl-O'\n                }\n            });\n            menuButtons.add({\n                name: 'multidelete',\n                originalAction: function() {\n                    dialogMultidelete.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'fontsize',\n                originalAction: function() {\n                    dialogFontsize.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'theme',\n                originalAction: function() {\n                    dialogAceTheme.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'print',\n                originalAction: function() {\n                    window.print();\n                },\n                bindKey: {\n                    win: 'Alt-P',\n                    mac: 'Command-P'\n                }\n            });\n            menuButtons.add({\n                name: 'undo',\n                originalAction: function() {\n                    fileManager.currentFile('undo');\n                }\n            });\n            menuButtons.add({\n                name: 'redo',\n                originalAction: function() {\n                    fileManager.currentFile('redo');\n                }\n            });\n            menuButtons.add({\n                name: 'select_all',\n                editorName: 'selectall',\n                originalAction: function() {\n                    fileManager.currentFile('selectAll');\n                }\n            });\n            menuButtons.add({\n                name: 'find',\n                originalAction: function() {\n                    fileManager.currentFile('find');\n                }\n            });\n            menuButtons.add({\n                name: 'find_replace',\n                editorName: 'replace',\n                originalAction: function() {\n                    fileManager.currentFile('replace');\n                }\n            });\n            menuButtons.add({\n                name: 'next',\n                editorName: 'findnext',\n                originalAction: function() {\n                    fileManager.currentFile('next');\n                }\n            });\n            menuButtons.add({\n                name: 'fullscreen',\n                originalAction: function() {\n                    if (fullScreen) {\n                        rootObj.removeClass('vpl_ide_root_fullscreen');\n                        $('body').removeClass('vpl_body_fullscreen');\n                        menuButtons.setText('fullscreen', 'fullscreen');\n                        $('#vpl_ide_user').hide();\n                        fullScreen = false;\n                    } else {\n                        $('body').addClass('vpl_body_fullscreen').scrollTop(0);\n                        rootObj.addClass('vpl_ide_root_fullscreen');\n                        menuButtons.setText('fullscreen', 'regularscreen');\n                        if (options.username) {\n                            $('#vpl_ide_user').show();\n                        }\n                        fullScreen = true;\n                    }\n                    focusCurrentFile();\n                    setTimeout(autoResizeTab, 10);\n                },\n                bindKey: {\n                    win: 'Alt-F',\n                    mac: 'Ctrl-F'\n                }\n            });\n            menuButtons.add({\n                name: 'download',\n                originalAction: function() {\n                    window.location = options.download;\n                }\n            });\n            /**\n             * Reset files action\n             */\n            function resetFiles() {\n                VPLUI.requestAction('resetfiles', '', {}, options.ajaxurl)\n                .done(function(response) {\n                    var files = response.files;\n                    for (var fileName in files) {\n                        if (files.hasOwnProperty(fileName)) {\n                            fileManager.addFile(files[fileName], true, VPLUtil.doNothing, showErrorMessage);\n                        }\n                    }\n                    fileManager.fileListVisibleIfNeeded();\n                    VPLUtil.delay('updateMenu', updateMenu);\n                }).fail(showErrorMessage);\n            }\n            menuButtons.add({\n                name: 'resetfiles',\n                originalAction: function() {\n                    showMessage(str('sureresetfiles'), {\n                        title: str('resetfiles'),\n                        ok: resetFiles,\n                        icon: 'resetfiles'\n                    });\n                }\n            });\n            menuButtons.add({\n                name: 'save',\n                originalAction: function() {\n                    var data = {\n                        files: fileManager.getFilesToSave(),\n                        comments: $('#vpl_ide_input_comments').val(),\n                        version: fileManager.getVersion()\n                    };\n                    if (JSON.stringify(data).length > options.postMaxSize) {\n                        showErrorMessage(str('maxpostsizeexceeded'));\n                        return;\n                    }\n                    /**\n                     * Save action\n                     */\n                    function doSave() {\n                        VPLUI.requestAction('save', 'saving', data, options.ajaxurl)\n                        .done(function(response) {\n                            if (response.requestsconfirmation) {\n                                showMessage(response.question, {\n                                    title: str('saving'),\n                                    icon: 'alert',\n                                    yes: function() {\n                                        data.version = 0;\n                                        doSave();\n                                    }\n                                });\n                            } else {\n                                fileManager.resetModified();\n                                fileManager.setVersion(response.version);\n                                menuButtons.setTimeLeft(response);\n                                VPLUtil.delay('updateMenu', updateMenu);\n                                if (VPLUI.monitorRunning()) {\n                                    data.processid = VPLUtil.getProcessId();\n                                    VPLUI.requestAction('update', 'updating', data, options.ajaxurl);\n                                }\n                            }\n                        }).fail(showErrorMessage);\n                    }\n                    doSave();\n                },\n                bindKey: {\n                    win: 'Ctrl-S',\n                    mac: 'Command-S'\n                }\n            });\n\n            /**\n             * Launches the action\n             *\n             * @param {string} action Action 'run', 'debug', 'evaluate'\n             * @param {string} acting I18n for the action in progress\n             * @param {string} data Data attached to the action\n             */\n            function executionRequest(action, acting, data) {\n                if (!data) {\n                    data = {};\n                }\n                if (!lastConsole.isConnected()) {\n                    VPLUI.requestAction(action, '', data, options.ajaxurl)\n                    .done(function(response) {\n                        VPLUI.webSocketMonitor(response, action, acting, executionActions);\n                    })\n                    .fail(showErrorMessage);\n                }\n            }\n            /**\n             * Launches the run action\n             */\n            function runAction() {\n                executionRequest('run', 'running', {\n                    XGEOMETRY: VNCClient.getCanvasSize()\n                });\n            }\n            menuButtons.add({\n                name: 'run',\n                originalAction: function() {\n                    executionActions.setLastAction(runAction);\n                    runAction();\n                },\n                bindKey: {\n                    win: 'Ctrl-F11',\n                    mac: 'Command-U'\n                }\n            });\n            /**\n             * Launches the debug action\n             */\n            function debugAction() {\n                executionRequest('debug', 'debugging', {\n                    XGEOMETRY: VNCClient.getCanvasSize()\n                });\n            }\n            menuButtons.add({\n                name: 'debug',\n                originalAction: function() {\n                    executionActions.setLastAction(debugAction);\n                    debugAction();\n                },\n                bindKey: {\n                    win: 'Alt-F11',\n                    mac: 'Option-U'\n                }\n            });\n            /**\n             * Launches the evaluate action\n             */\n            function evaluateAction() {\n                executionRequest('evaluate', 'evaluating');\n            }\n            menuButtons.add({\n                name: 'evaluate',\n                originalAction: function() {\n                    executionActions.setLastAction(evaluateAction);\n                    evaluateAction();\n                },\n                bindKey: {\n                    win: 'Shift-F11',\n                    mac: 'Command-Option-U'\n                }\n            });\n            menuButtons.add({\n                name: 'comments',\n                originalAction: function() {\n                    dialogComments.dialog('open');\n                },\n            });\n            menuButtons.add({\n                name: 'console',\n                originalAction: function() {\n                    if (lastConsole.isOpen()) {\n                        lastConsole.close();\n                    } else {\n                        lastConsole.show();\n                    }\n                }\n            });\n            menuButtons.add({name: 'user'});\n            menuButtons.add({\n                name: 'about',\n                originalAction: function() {\n                    aboutDialog.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'timeleft',\n                originalAction: function() {\n                    menuButtons.toggleTimeLeft();\n                }\n            });\n            menuButtons.add({\n                name: 'more',\n                originalAction: function() {\n                    var tag = $('#vpl_ide_menuextra');\n                    if (tag.is(\":visible\")) {\n                        menuButtons.setText('more', 'more', VPLUtil.str('more'));\n                        tag.hide();\n                    } else {\n                        menuButtons.setText('more', 'less', VPLUtil.str('less'));\n                        tag.show();\n                    }\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                }\n            });\n            menuButtons.add({\n                name: 'shrightpanel',\n                icon: 'close-rightpanel',\n                originalAction: function() {\n                    if (resultContainer.vplVisible) {\n                        resultContainer.hide();\n                        resultContainer.vplVisible = false;\n                        menuButtons.setText('shrightpanel', 'open-rightpanel', VPLUtil.str('shrightpanel'));\n                    } else {\n                        menuButtons.setText('shrightpanel', 'close-rightpanel', VPLUtil.str('shrightpanel'));\n                        resultContainer.show();\n                        resultContainer.vplVisible = true;\n                    }\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                },\n                bindKey: {\n                    win: 'Ctrl-M',\n                    mac: 'Ctrl-M'\n                }\n            });\n            var rightpanelstyle = \"position:absolute;right:0;top:60px;z-index:100;margin:3px\";\n            tr.append('<span style=\"' + rightpanelstyle + '\">' + menuButtons.getHTML('shrightpanel') + '</span>');\n            var rightPanelButton = $('#vpl_ide_shrightpanel');\n            menuButtons.setText('shrightpanel', 'close-rightpanel', VPLUtil.str('shrightpanel'));\n\n            rightPanelButton.button();\n            rightPanelButton.css('padding', '0');\n            $('#vpl_ide_shrightpanel.ui-button-text').css('padding', '0');\n            rightPanelButton.on('click', function() {\n                menuButtons.launchAction('shrightpanel');\n            });\n            rightPanelButton.hide();\n            menu.addClass(\"ui-widget-header ui-corner-all\");\n            var menuHtml = \"\";\n            menuHtml += menuButtons.getHTML('more');\n            menuHtml += menuButtons.getHTML('save');\n            menuHtml += \"<span id='vpl_ide_mexecution'>\";\n            menuHtml += menuButtons.getHTML('run');\n            menuHtml += menuButtons.getHTML('debug');\n            menuHtml += menuButtons.getHTML('evaluate');\n            menuHtml += menuButtons.getHTML('comments');\n            menuHtml += menuButtons.getHTML('console');\n            menuHtml += \"</span> \";\n            menuHtml += \"<span id='vpl_ide_menuextra'>\";\n            menuHtml += \"<span id='vpl_ide_file'>\";\n            // TODO autosave not implemented.\n            menuHtml += menuButtons.getHTML('filelist');\n            menuHtml += menuButtons.getHTML('new');\n            menuHtml += menuButtons.getHTML('rename');\n            menuHtml += menuButtons.getHTML('delete');\n            menuHtml += menuButtons.getHTML('import');\n            menuHtml += menuButtons.getHTML('download');\n            menuHtml += menuButtons.getHTML('resetfiles');\n            menuHtml += menuButtons.getHTML('sort');\n            menuHtml += menuButtons.getHTML('multidelete');\n            menuHtml += menuButtons.getHTML('fontsize');\n            menuHtml += menuButtons.getHTML('theme');\n            menuHtml += \"</span> \";\n            // TODO print still not implemented.\n            menuHtml += \"<span id='vpl_ide_edit'>\";\n            menuHtml += menuButtons.getHTML('undo');\n            menuHtml += menuButtons.getHTML('redo');\n            menuHtml += menuButtons.getHTML('select_all');\n            menuHtml += menuButtons.getHTML('find');\n            menuHtml += menuButtons.getHTML('find_replace');\n            menuHtml += menuButtons.getHTML('next');\n            menuHtml += \"</span> \";\n            menuHtml += \"</span> \";\n            menuHtml += menuButtons.getHTML('fullscreen') + ' ';\n            menuHtml += menuButtons.getHTML('about') + ' ';\n            menuHtml += menuButtons.getHTML('user') + ' ';\n            menuHtml += menuButtons.getHTML('timeleft');\n            menuHtml += '<div class=\"clearfix\"></div>';\n            menu.append(menuHtml);\n            $('#vpl_ide_more').button();\n            $('#vpl_ide_save').button();\n            $('#vpl_ide_menuextra').hide();\n            $('#vpl_ide_file').controlgroup();\n            $('#vpl_ide_edit').controlgroup();\n            $('#vpl_ide_mexecution').controlgroup();\n            $('#vpl_ide_fullscreen').button();\n            $('#vpl_ide_acetheme').button();\n            $('#vpl_ide_about').button();\n            $('#vpl_ide_user').button().css('float', 'right').hide();\n            $('#vpl_ide_timeleft').button().css('float', 'right').hide();\n            $('#vpl_menu .ui-button').css('padding', '6px');\n            $('#vpl_menu .ui-button-text').css('padding', '0');\n            var alwaysActive = ['filelist', 'more', 'fullscreen', 'about', 'resetfiles',\n                                'download', 'comments', 'console', 'import',\n                                'fontsize', 'timeleft'];\n            for (var i = 0; i < alwaysActive.length; i++) {\n                menuButtons.enable(alwaysActive[i], true);\n            }\n            menuButtons.setExtracontent('user', options.username);\n            menuButtons.setTimeLeft(options);\n            updateMenu = function() {\n                var i;\n                var file = fileManager.currentFile();\n                var nfiles = fileManager.length();\n                if (nfiles) {\n                    tabs.show();\n                } else {\n                    tabs.hide();\n                }\n                if (fileManager.isFileListVisible()) {\n                    menuButtons.setText('filelist', 'filelistclose', VPLUtil.str('filelist'));\n                } else {\n                    menuButtons.setText('filelist', 'filelist', VPLUtil.str('filelist'));\n                }\n                var modified = fileManager.isModified();\n                menuButtons.enable('save', modified);\n                var running = VPLUI.monitorRunning();\n                if (running) {\n                    menuButtons.setText('run', 'running');\n                } else {\n                    menuButtons.setText('run', 'run');\n                }\n                menuButtons.enable('run', !running && (!modified || options.example) && isOptionAllowed('run'));\n                menuButtons.enable('debug', !running && (!modified || options.example) && isOptionAllowed('debug'));\n                menuButtons.enable('evaluate', !running && (!modified || options.example) && isOptionAllowed('evaluate'));\n                menuButtons.enable('download', !modified);\n                menuButtons.enable('new', nfiles < maxNumberOfFiles);\n                menuButtons.enable('sort', nfiles - minNumberOfFiles > 1);\n                menuButtons.enable('multidelete', nfiles - minNumberOfFiles > 1);\n                menuButtons.enable('theme', true);\n                var sel;\n                if (!file || nfiles === 0) {\n                    sel = ['rename', 'delete', 'undo', 'redo', 'select_all', 'find', 'find_replace', 'next'];\n                    for (i = 0; i < sel.length; i++) {\n                        menuButtons.enable(sel[i], false);\n                    }\n                    return;\n                }\n                menuButtons.enable('rename', file.getId() >= minNumberOfFiles && nfiles !== 0);\n                menuButtons.enable('delete', file.getId() >= minNumberOfFiles && nfiles !== 0);\n                menuButtons.enable('undo', file.hasUndo());\n                menuButtons.enable('redo', file.hasRedo());\n                menuButtons.enable('select_all', file.hasSelectAll());\n                menuButtons.enable('find', file.hasFind());\n                menuButtons.enable('find_replace', file.hasFindReplace());\n                menuButtons.enable('next', file.hasNext());\n                VPLUtil.delay('updateFileList', fileManager.updateFileList);\n            };\n\n            executionActions = {\n                'open': updateMenu,\n                'close': updateMenu,\n                'getConsole': function() {\n                    return lastConsole;\n                },\n                'setResult': self.setResult,\n                'ajaxurl': options.ajaxurl,\n                'run': function(content, coninfo, ws) {\n                    var parsed = /^([^:]*):?(.*)/i.exec(content);\n                    var type = parsed[1];\n                    if (type == 'terminal' || type == 'webterminal') {\n                        if (lastConsole && lastConsole.isOpen()) {\n                            lastConsole.close();\n                        }\n                        lastConsole = terminal;\n                        terminal.connect(coninfo.executionURL, function() {\n                            ws.close();\n                            focusCurrentFile();\n                        });\n                        if (type == 'webterminal') {\n                            var URLfavicon = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse;\n                            URLfavicon += \"/favicon.ico\";\n                            var imgFavicon = $('<img>');\n                            imgFavicon.attr('src', URLfavicon);\n                            imgFavicon.attr('style', 'display:none');\n                            $('body').append(imgFavicon);\n                        }\n                    } else if (type == 'vnc') {\n                        if (lastConsole && lastConsole.isOpen()) {\n                            lastConsole.close();\n                        }\n                        lastConsole = VNCClient;\n                        VNCClient.connect(coninfo.secure, coninfo.server, coninfo.portToUse, coninfo.VNCpassword,\n                                coninfo.executionPath, function() {\n                                    ws.close();\n                                    focusCurrentFile();\n                                });\n                    } else if (type == \"browser\") {\n                        var URL = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse + \"/\";\n                        URL += parsed[2] + \"/httpPassthrough\";\n                        if (isTeacher) {\n                            URL += \"?private\";\n                        }\n                        var message = '<a href=\"' + URL + '\" target=\"_blank\">';\n                        message += VPLUtil.str('open') + '</a>';\n                        var options = {\n                            width: 200,\n                            icon: 'run',\n                            title: VPLUtil.str('run'),\n                        };\n                        showMessage(message, options);\n                    } else {\n                        VPLUtil.log(\"Type of run error \" + content, true);\n                    }\n                },\n                'lastAction': false,\n                'getLastAction': function() {\n                    var ret = this.lastAction;\n                    this.lastAction = false;\n                    return ret;\n                },\n                'setLastAction': function(action) {\n                    this.lastAction = action;\n                }\n            };\n\n            tabs.on(\"tabsactivate\", function() {\n                fileManager.currentFile('focus');\n                VPLUtil.delay('updateMenu', updateMenu);\n                VPLUtil.delay('autoResizeTab', autoResizeTab);\n            });\n\n            // VPLIDE resize view control.\n            var jw = $(window);\n            jw.on('resize', autoResizeTab);\n            // Save? before exit.\n            if (!options.example) {\n                jw.on('beforeunload', function() {\n                    if (fileManager.isModified()) {\n                        return str('changesNotSaved');\n                    }\n                    return undefined;\n                });\n            }\n            fileManager = new FileManager();\n\n            autoResizeTab();\n            // Checks menu width every 1 sec as it can change without event.\n            (function() {\n                var oldMenuWidth = menu.width();\n                /**\n                 * Checks menu width change\n                 */\n                function checkMenuWidth() {\n                    var newMenuWidth = menu.width();\n                    if (oldMenuWidth != newMenuWidth) {\n                        oldMenuWidth = newMenuWidth;\n                        autoResizeTab();\n                    }\n                }\n                checkMenuWidth();\n                setInterval(checkMenuWidth, 1000);\n            }());\n            fileManager.resetModified();\n            VPLUI.requestAction('load', 'loading', options, options.loadajaxurl)\n            .done(function(response) {\n                var allOK = true;\n                var files = response.files;\n                var showFileList = false;\n                for (var i = 0; i < files.length; i++) {\n                    var file = files[i];\n                    var r = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                    if (r) {\n                        r.resetModified();\n                        if (i < minNumberOfFiles || files.length <= 5) {\n                            fileManager.open(r);\n                        } else {\n                            showFileList = true;\n                        }\n                    } else {\n                        allOK = false;\n                    }\n                }\n                tabs.tabs('option', 'active', 0);\n\n                if (response.compilationexecution) {\n                    self.setResult(response.compilationexecution, false);\n                }\n                menuButtons.setTimeLeft(response);\n                if (response.comments > '') {\n                    $('#vpl_ide_input_comments').val(response.comments);\n                }\n                if (allOK) {\n                    fileManager.resetModified();\n                } else {\n                    fileManager.setModified();\n                }\n                if (fileManager.length() === 0 && maxNumberOfFiles > 0) {\n                    menuButtons.getAction('new')();\n                } else if (!options.saved) {\n                    fileManager.setModified();\n                }\n                fileManager.setFontSize(options.fontSize);\n                fileManager.setVersion(response.version);\n                fileManager.fileListVisible(showFileList);\n                VPLUtil.afterAll('AfterLoadFiles', function() {\n                    updateMenu();\n                    autoResizeTab();\n                    adjustTabsTitles(true);\n                });\n            })\n            .fail(showErrorMessage);\n        };\n        window.VPLIDE = VPLIDE;\n        return {\n            init: function(rootId, options) {\n                vplIdeInstance = new VPLIDE(rootId, options);\n            }\n        };\n    }\n);\n"],"names":["define","$","jqui","VPLUtil","VPLUI","VPLFile","VPLIDEButtons","VPLTerminal","VPLVNCClient","VPLIDE","vplIdeInstance","rootId","options","fileManager","adjustTabsTitles","autoResizeTab","showErrorMessage","updateMenu","executionActions","self","this","minNumberOfFiles","minfiles","maxNumberOfFiles","maxfiles","restrictedEdit","restrictededitor","example","readOnly","readOnlyFiles","isTeacher","fullScreen","scrollBarWidth","str","rootObj","append","Error","activateModification","optionsToCheck","loadajaxurl","ajaxurl","new","rename","delete","comments","acetheme","sort","multidelete","import","isOptionAllowed","op","dragoverHandler","e","originalEvent","dataTransfer","dropEffect","preventDefault","dropHandler","stopImmediatePropagation","dt","files","length","readSelectedFiles","file","addFile","fileListVisibleIfNeeded","restrictedPaste","stopPropagation","console","fontSize","parseInt","on","menu","menuButtons","tr","fileListContainer","fileList","fileListContent","tabsUl","tabs","resultContainer","result","renameDiretoryAction","doNothing","vplMinWidth","updateEvaluationNumber","res","nevaluations","text","reductionbyevaluation","freeevaluations","setExtracontent","lastResult","getTerminal","terminal","setResultGrade","content","raw","titleclass","find","titleTag","replaceWith","setResultTab","name","contentclass","contentTag","HTMLcontent","contents","html","setResult","go","i","getFiles","fileNames","getFileName","clearAnnotations","hasContent","gradeShow","formated","show","grade","sanitizeText","variables","processResult","compilation","evaluation","execution","window","VPLDescription","MathJax","math","Hub","Queue","vplVisible","accordion","anot","getAnnotations","j","type","gotoFile","row","hide","delay","heightStyle","header","animate","beforeActivate","event","ui","newHeader","hasClass","width","gotoFileLink","currentTarget","addClass","iconFolder","tabsAir","getTabsAir","outerWidth","resizeTabWidth","maxWidth","diffLeft","position","left","originalPosition","resizable","vplOriginalWidth","diffWidth","size","originalSize","currentFile","resizableOptions","containment","resize","start","off","stop","handles","focusCurrentFile","center","newWidth","tabsUlWidth","last","children","parentScrollLeft","parent","scrollLeft","fileTab","getTabNameId","scroll","finish","index","oldWidth","planb","disable","css","right","rel","wfl","newHeight","outerHeight","offset","top","height","panelHeight","resizeHeight","dialogbaseOptions","extend","close","showMessage","message","dialogNew","newFileHandler","keyCode","dialog","val","encoding","newfile","open","getTabPos","getId","focus","dialogButtons","title","buttons","setDialogTitleIcon","dialogRename","renameHandler","renameFile","dialogRenameDirectory","renameDirectoryHandler","renameDirectory","dirname","target","getAttribute","dialogComments","oldStudentComments","setModified","aboutDialog","OKButtons","shortcutDialog","getShortcuts","next","filter","button","dialogSort","dialogSortButtons","regNoNumber","sorted","newOrder","each","orig","id","replace","push","list","sortable","items","placeholder","item","removeClass","disableSelection","maxHeight","dialogMultidelete","dialogMultideleteButtons","prop","toDeleteList","label","data","deleteFile","updateFileList","dialogFontsize","fontsizeSlider","dialogFontFizeButtons","value","slider","setFontSize","ajax","async","url","JSON","stringify","contentType","dataType","getFontSize","min","max","change","dialogAceTheme","acethemeSelect","dialogAceThemeButtons","setTheme","setUserPreferences","aceTheme","modal","getTheme","VNCClient","lastConsole","fileSelect","resetFiles","requestAction","done","response","fileName","hasOwnProperty","fail","executionRequest","action","acting","isConnected","webSocketMonitor","runAction","XGEOMETRY","getCanvasSize","debugAction","evaluateAction","add","originalAction","fileListVisible","isFileListVisible","bindKey","win","mac","filename","ok","icon","closeFile","trigger","print","editorName","setText","scrollTop","username","setTimeout","location","download","getFilesToSave","version","getVersion","postMaxSize","doSave","requestsconfirmation","question","yes","resetModified","setVersion","setTimeLeft","monitorRunning","processid","getProcessId","setLastAction","isOpen","toggleTimeLeft","tag","is","getHTML","rightPanelButton","launchAction","menuHtml","controlgroup","alwaysActive","enable","nfiles","modified","isModified","sel","running","hasUndo","hasRedo","hasSelectAll","hasFind","hasFindReplace","hasNext","coninfo","ws","parsed","exec","connect","executionURL","URLfavicon","secure","server","portToUse","imgFavicon","attr","VNCpassword","executionPath","URL","log","ret","lastAction","jw","openFiles","fileNameIncluded","checkName","toLowerCase","nameMod","indexOf","twoBlockly","oldname","newname","isBlockly","v","generateFileList","fileNameExists","localClipboard","setClipboard","t","getClipboard","fileId","theme","addTab","fid","hlink","removeTab","remove","isReadOnly","pos","setGetkeys","hideIDEStatus","ptab","splice","getFilePosById","isClosed","b","showError","validPath","setContent","getUniqueId","extendToBinary","extendToBlockly","extendToCodeEditor","setFileName","isBinary","fileExtension","getContent","gotoFileName","directoryExists","dirName","startsWith","oldName","newName","oldNameLength","checkDirName","newFileNames","substr","oldNames","arguments","fun","args","Array","prototype","slice","shift","apply","currentPos","getFileTab","l","gotoLine","a","fname","fpos","line","getFile","getDirectoryStructure","structure","isDir","addFilePath","path","split","curdir","p","part","lines","lister","dir","indent","fd","sname","dirline","iconModified","iconReadOnly","iconRequired","getAction","oldMenuWidth","checkMenuWidth","newMenuWidth","setInterval","allOK","showFileList","r","compilationexecution","saved","afterAll","init"],"mappings":"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"}